{"ast":null,"code":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n'use strict';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/necolas/OpenSource/github/necolas/react-native-web/packages/examples/pages/lists/examples/MultiColumn.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport FlatList from \"react-native-web/dist/cjs/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/cjs/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/cjs/exports/Text\";\nimport View from \"react-native-web/dist/cjs/exports/View\";\nimport { FooterComponent, HeaderComponent, ItemComponent, PlainInput, SeparatorComponent, genItemData, getItemLayout, pressItem, renderSmallSwitchOption } from './shared';\n\nvar MultiColumnExample = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(MultiColumnExample, _React$PureComponent);\n\n  var _super = _createSuper(MultiColumnExample);\n\n  function MultiColumnExample() {\n    var _this;\n\n    _classCallCheck(this, MultiColumnExample);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      data: genItemData(1000),\n      filterText: '',\n      fixedHeight: true,\n      logViewable: false,\n      numColumns: 2,\n      virtualized: true\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onChangeFilterText\", function (filterText) {\n      _this.setState(function () {\n        return {\n          filterText: filterText\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onChangeNumColumns\", function (numColumns) {\n      _this.setState(function () {\n        return {\n          numColumns: Number(numColumns)\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderItemComponent\", function (_ref) {\n      var item = _ref.item;\n      return /*#__PURE__*/_jsxDEV(View, {\n        style: styles.card,\n        children: /*#__PURE__*/_jsxDEV(ItemComponent, {\n          fixedHeight: _this.state.fixedHeight,\n          item: item,\n          onPress: _this._pressItem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, _assertThisInitialized(_this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, _assertThisInitialized(_this));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onViewableItemsChanged\", function (info) {\n      // Impressions can be logged here\n      if (_this.state.logViewable) {\n        console.log('onViewableItemsChanged: ', info.changed.map(function (v) {\n          return _objectSpread(_objectSpread({}, v), {}, {\n            item: '...'\n          });\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_pressItem\", function (key) {\n      pressItem(_assertThisInitialized(_this), key);\n    });\n\n    return _this;\n  }\n\n  _createClass(MultiColumnExample, [{\n    key: \"render\",\n    value: function render() {\n      var filterRegex = new RegExp(String(this.state.filterText), 'i');\n\n      var filter = function filter(item) {\n        return filterRegex.test(item.text) || filterRegex.test(item.title);\n      };\n\n      var filteredData = this.state.data.filter(filter);\n      return /*#__PURE__*/_jsxDEV(View, {\n        style: styles.container,\n        children: [/*#__PURE__*/_jsxDEV(View, {\n          style: styles.searchRow,\n          children: [/*#__PURE__*/_jsxDEV(View, {\n            style: styles.row,\n            children: [/*#__PURE__*/_jsxDEV(PlainInput, {\n              onChangeText: this._onChangeFilterText,\n              placeholder: \"Search...\",\n              value: this.state.filterText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              children: \" numColumns: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(PlainInput, {\n              clearButtonMode: \"never\",\n              onChangeText: this._onChangeNumColumns,\n              value: this.state.numColumns ? String(this.state.numColumns) : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(View, {\n            style: styles.row,\n            children: [renderSmallSwitchOption(this, 'virtualized'), renderSmallSwitchOption(this, 'fixedHeight'), renderSmallSwitchOption(this, 'logViewable')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(SeparatorComponent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(FlatList, {\n          data: filteredData,\n          disableVirtualization: !this.state.virtualized,\n          getItemLayout: this.state.fixedHeight ? this._getItemLayout : undefined,\n          ListFooterComponent: FooterComponent,\n          ListHeaderComponent: HeaderComponent,\n          numColumns: this.state.numColumns || 1,\n          onRefresh: function onRefresh() {\n            return console.log('onRefresh: nothing to refresh :P');\n          },\n          onViewableItemsChanged: this._onViewableItemsChanged,\n          refreshing: false,\n          renderItem: this._renderItemComponent\n        }, this.state.numColumns + (this.state.fixedHeight ? 'f' : 'v'), false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this);\n    }\n  }, {\n    key: \"_getItemLayout\",\n    value: function _getItemLayout(data, index) {\n      var length = getItemLayout(data, index).length + 2 * (CARD_MARGIN + BORDER_WIDTH);\n      return {\n        length: length,\n        offset: length * index,\n        index: index\n      };\n    }\n  }]);\n\n  return MultiColumnExample;\n}(React.PureComponent);\n\n_defineProperty(MultiColumnExample, \"title\", '<FlatList> - MultiColumn');\n\n_defineProperty(MultiColumnExample, \"description\", 'Performant, scrollable grid of data.');\n\nvar CARD_MARGIN = 4;\nvar BORDER_WIDTH = 1;\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'rgb(239, 239, 244)',\n    flex: 1\n  },\n  card: {\n    margin: CARD_MARGIN,\n    borderRadius: 10,\n    flex: 1,\n    overflow: 'hidden',\n    borderColor: 'lightgray',\n    borderWidth: BORDER_WIDTH\n  },\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  searchRow: {\n    padding: 10\n  }\n});\nexport default function () {\n  return /*#__PURE__*/_jsxDEV(View, {\n    style: {\n      height: 300\n    },\n    children: /*#__PURE__*/_jsxDEV(MultiColumnExample, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/necolas/OpenSource/github/necolas/react-native-web/packages/examples/pages/lists/examples/MultiColumn.js"],"names":["React","FooterComponent","HeaderComponent","ItemComponent","PlainInput","SeparatorComponent","genItemData","getItemLayout","pressItem","renderSmallSwitchOption","MultiColumnExample","data","filterText","fixedHeight","logViewable","numColumns","virtualized","setState","Number","item","styles","card","state","_pressItem","info","console","log","changed","map","v","key","filterRegex","RegExp","String","filter","test","text","title","filteredData","container","searchRow","row","_onChangeFilterText","_onChangeNumColumns","_getItemLayout","undefined","_onViewableItemsChanged","_renderItemComponent","index","length","CARD_MARGIN","BORDER_WIDTH","offset","PureComponent","StyleSheet","create","backgroundColor","flex","margin","borderRadius","overflow","borderColor","borderWidth","flexDirection","alignItems","padding","height"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @noflow\n */\n'use strict';\n\nimport React from 'react';\nimport { FlatList, StyleSheet, Text, View } from 'react-native';\n\nimport {\n  FooterComponent,\n  HeaderComponent,\n  ItemComponent,\n  PlainInput,\n  SeparatorComponent,\n  genItemData,\n  getItemLayout,\n  pressItem,\n  renderSmallSwitchOption\n} from './shared';\n\nclass MultiColumnExample extends React.PureComponent {\n  static title = '<FlatList> - MultiColumn';\n  static description = 'Performant, scrollable grid of data.';\n\n  state = {\n    data: genItemData(1000),\n    filterText: '',\n    fixedHeight: true,\n    logViewable: false,\n    numColumns: 2,\n    virtualized: true\n  };\n  _onChangeFilterText = filterText => {\n    this.setState(() => ({ filterText }));\n  };\n  _onChangeNumColumns = numColumns => {\n    this.setState(() => ({ numColumns: Number(numColumns) }));\n  };\n  render() {\n    const filterRegex = new RegExp(String(this.state.filterText), 'i');\n    const filter = item => filterRegex.test(item.text) || filterRegex.test(item.title);\n    const filteredData = this.state.data.filter(filter);\n    return (\n      <View style={styles.container}>\n        <View style={styles.searchRow}>\n          <View style={styles.row}>\n            <PlainInput\n              onChangeText={this._onChangeFilterText}\n              placeholder=\"Search...\"\n              value={this.state.filterText}\n            />\n            <Text> numColumns: </Text>\n            <PlainInput\n              clearButtonMode=\"never\"\n              onChangeText={this._onChangeNumColumns}\n              value={this.state.numColumns ? String(this.state.numColumns) : ''}\n            />\n          </View>\n          <View style={styles.row}>\n            {renderSmallSwitchOption(this, 'virtualized')}\n            {renderSmallSwitchOption(this, 'fixedHeight')}\n            {renderSmallSwitchOption(this, 'logViewable')}\n          </View>\n        </View>\n        <SeparatorComponent />\n        <FlatList\n          data={filteredData}\n          disableVirtualization={!this.state.virtualized}\n          getItemLayout={this.state.fixedHeight ? this._getItemLayout : undefined}\n          key={this.state.numColumns + (this.state.fixedHeight ? 'f' : 'v')}\n          ListFooterComponent={FooterComponent}\n          ListHeaderComponent={HeaderComponent}\n          numColumns={this.state.numColumns || 1}\n          onRefresh={() => console.log('onRefresh: nothing to refresh :P')}\n          onViewableItemsChanged={this._onViewableItemsChanged}\n          refreshing={false}\n          renderItem={this._renderItemComponent}\n        />\n      </View>\n    );\n  }\n  _getItemLayout(data: any, index: number): { length: number, offset: number, index: number } {\n    const length = getItemLayout(data, index).length + 2 * (CARD_MARGIN + BORDER_WIDTH);\n    return { length, offset: length * index, index };\n  }\n  _renderItemComponent = ({ item }) => {\n    return (\n      <View style={styles.card}>\n        <ItemComponent fixedHeight={this.state.fixedHeight} item={item} onPress={this._pressItem} />\n      </View>\n    );\n  };\n  // This is called when items change viewability by scrolling into or out of the viewable area.\n  _onViewableItemsChanged = (info: {\n    changed: Array<{\n      key: string,\n      isViewable: boolean,\n      item: { columns: Array<*> },\n      index: ?number,\n      section?: any\n    }>\n  }) => {\n    // Impressions can be logged here\n    if (this.state.logViewable) {\n      console.log('onViewableItemsChanged: ', info.changed.map(v => ({ ...v, item: '...' })));\n    }\n  };\n  _pressItem = (key: string) => {\n    pressItem(this, key);\n  };\n}\n\nconst CARD_MARGIN = 4;\nconst BORDER_WIDTH = 1;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'rgb(239, 239, 244)',\n    flex: 1\n  },\n  card: {\n    margin: CARD_MARGIN,\n    borderRadius: 10,\n    flex: 1,\n    overflow: 'hidden',\n    borderColor: 'lightgray',\n    borderWidth: BORDER_WIDTH\n  },\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  searchRow: {\n    padding: 10\n  }\n});\n\nexport default function() {\n  return (\n    <View style={{ height: 300 }}>\n      <MultiColumnExample />\n    </View>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}