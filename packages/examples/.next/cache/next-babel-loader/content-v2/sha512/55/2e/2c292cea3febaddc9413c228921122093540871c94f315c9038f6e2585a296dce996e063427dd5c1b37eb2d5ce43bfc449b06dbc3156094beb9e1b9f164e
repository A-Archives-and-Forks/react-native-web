{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { styles as helperStyles } from '../helpers';\nimport StyleSheet from \"react-native-web/dist/cjs/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/cjs/exports/TextInput\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/cjs/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/cjs/exports/View\";\n\nvar TouchableWrapper = /*#__PURE__*/function (_React$Component) {\n  _inherits(TouchableWrapper, _React$Component);\n\n  var _super = _createSuper(TouchableWrapper);\n\n  function TouchableWrapper() {\n    var _this;\n\n    _classCallCheck(this, TouchableWrapper);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"_handlePress\", function () {\n      if (_this._input) {\n        setTimeout(function () {\n          _this._input.focus();\n        }, 0);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (c) {\n      _this._input = c;\n    });\n\n    return _this;\n  }\n\n  _createClass(TouchableWrapper, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsx(TouchableWithoutFeedback, {\n        importantForAccessibility: \"no\",\n        onPress: this._handlePress,\n        children: /*#__PURE__*/_jsx(View, {\n          style: styles.container,\n          children: /*#__PURE__*/_jsx(TextInput, {\n            multiline: false,\n            ref: this._setRef,\n            style: helperStyles.textinput\n          })\n        })\n      });\n    }\n  }]);\n\n  return TouchableWrapper;\n}(React.Component);\n\nexport { TouchableWrapper as default };\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 50\n  }\n});","map":null,"metadata":{},"sourceType":"module"}