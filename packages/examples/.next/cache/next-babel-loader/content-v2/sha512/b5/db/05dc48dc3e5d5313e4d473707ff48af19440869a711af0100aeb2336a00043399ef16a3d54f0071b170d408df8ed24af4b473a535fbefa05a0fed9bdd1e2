{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { styles as helperStyles } from '../helpers';\nimport StyleSheet from \"react-native-web/dist/cjs/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/cjs/exports/TextInput\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/cjs/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/cjs/exports/View\";\nexport default class TouchableWrapper extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"_handlePress\", () => {\n      if (this._input) {\n        setTimeout(() => {\n          this._input.focus();\n        }, 0);\n      }\n    });\n\n    _defineProperty(this, \"_setRef\", c => {\n      this._input = c;\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsx(TouchableWithoutFeedback, {\n      importantForAccessibility: \"no\",\n      onPress: this._handlePress,\n      children: /*#__PURE__*/_jsx(View, {\n        style: styles.container,\n        children: /*#__PURE__*/_jsx(TextInput, {\n          multiline: false,\n          ref: this._setRef,\n          style: helperStyles.textinput\n        })\n      })\n    });\n  }\n\n}\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 50\n  }\n});","map":null,"metadata":{},"sourceType":"module"}