{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/necolas/OpenSource/github/necolas/react-native-web/packages/examples/pages/view/examples/OnLayout.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/cjs/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/cjs/exports/Text\";\nimport View from \"react-native-web/dist/cjs/exports/View\";\nconst l1 = {\n  width: '100%',\n  paddingLeft: 0,\n  paddingTop: 0\n};\nconst l2 = {\n  width: '75%',\n  paddingLeft: 10,\n  paddingTop: 10\n};\n\nclass OnLayoutExample extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      layoutInfo: {}\n    });\n\n    _defineProperty(this, \"_handleLayout\", ({\n      nativeEvent\n    }) => {\n      this.setState(() => ({\n        layoutInfo: nativeEvent.layout\n      }));\n    });\n\n    _defineProperty(this, \"_setRef\", component => {\n      this._ref = component;\n    });\n  }\n\n  componentDidMount() {\n    this._layout = l1;\n    this._interval = setInterval(() => {\n      if (this._ref) {\n        this._ref.setNativeProps({\n          style: this._layout\n        });\n\n        this._layout = this._layout.width === '100%' ? l2 : l1;\n      }\n    }, 2000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this._interval);\n  }\n\n  render() {\n    const {\n      x,\n      y,\n      width,\n      height\n    } = this.state.layoutInfo;\n    return /*#__PURE__*/_jsxDEV(View, {\n      style: styles.root,\n      children: [/*#__PURE__*/_jsxDEV(View, {\n        style: styles.left,\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: [\"x: \", x]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: [\"y: \", y]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: [\"width: \", width]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: [\"height: \", height]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(View, {\n        style: styles.right,\n        children: /*#__PURE__*/_jsxDEV(View, {\n          ref: this._setRef,\n          style: styles.container,\n          children: /*#__PURE__*/_jsxDEV(View, {\n            onLayout: this._handleLayout,\n            style: styles.box\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default function OnLayout() {\n  return /*#__PURE__*/_jsxDEV(OnLayoutExample, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 10\n  }, this);\n}\nconst styles = StyleSheet.create({\n  root: {\n    flexDirection: 'row'\n  },\n  container: {\n    height: 50\n  },\n  left: {\n    width: 100\n  },\n  right: {\n    flex: 1\n  },\n  box: {\n    backgroundColor: '#eee',\n    flex: 1\n  }\n});","map":{"version":3,"sources":["/Users/necolas/OpenSource/github/necolas/react-native-web/packages/examples/pages/view/examples/OnLayout.js"],"names":["React","l1","width","paddingLeft","paddingTop","l2","OnLayoutExample","Component","layoutInfo","nativeEvent","setState","layout","component","_ref","componentDidMount","_layout","_interval","setInterval","setNativeProps","style","componentWillUnmount","clearInterval","render","x","y","height","state","styles","root","left","right","_setRef","container","_handleLayout","box","OnLayout","StyleSheet","create","flexDirection","flex","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\n\nconst l1 = { width: '100%', paddingLeft: 0, paddingTop: 0 };\nconst l2 = { width: '75%', paddingLeft: 10, paddingTop: 10 };\n\nclass OnLayoutExample extends React.Component {\n  state = {\n    layoutInfo: {}\n  };\n\n  componentDidMount() {\n    this._layout = l1;\n\n    this._interval = setInterval(() => {\n      if (this._ref) {\n        this._ref.setNativeProps({ style: this._layout });\n        this._layout = this._layout.width === '100%' ? l2 : l1;\n      }\n    }, 2000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this._interval);\n  }\n\n  render() {\n    const { x, y, width, height } = this.state.layoutInfo;\n    return (\n      <View style={styles.root}>\n        <View style={styles.left}>\n          <Text>x: {x}</Text>\n          <Text>y: {y}</Text>\n          <Text>width: {width}</Text>\n          <Text>height: {height}</Text>\n        </View>\n        <View style={styles.right}>\n          <View ref={this._setRef} style={styles.container}>\n            <View onLayout={this._handleLayout} style={styles.box} />\n          </View>\n        </View>\n      </View>\n    );\n  }\n\n  _handleLayout = ({ nativeEvent }) => {\n    this.setState(() => ({ layoutInfo: nativeEvent.layout }));\n  };\n\n  _setRef = component => {\n    this._ref = component;\n  };\n}\n\nexport default function OnLayout() {\n  return <OnLayoutExample />;\n}\n\nconst styles = StyleSheet.create({\n  root: {\n    flexDirection: 'row'\n  },\n  container: {\n    height: 50\n  },\n  left: {\n    width: 100\n  },\n  right: {\n    flex: 1\n  },\n  box: {\n    backgroundColor: '#eee',\n    flex: 1\n  }\n});\n"]},"metadata":{},"sourceType":"module"}