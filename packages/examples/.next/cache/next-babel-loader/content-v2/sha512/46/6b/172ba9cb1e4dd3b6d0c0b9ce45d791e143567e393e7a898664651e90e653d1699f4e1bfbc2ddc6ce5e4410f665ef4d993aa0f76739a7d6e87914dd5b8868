{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/cjs/exports/StyleSheet\";\nimport View from \"react-native-web/dist/cjs/exports/View\";\nimport PanResponder from \"react-native-web/dist/cjs/exports/PanResponder\";\nexport default class LocationXY extends Component {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"_handlePanResponderMove\", (e, gestureState) => {\n      console.log(e.nativeEvent.locationX, e.nativeEvent.locationY);\n      this.setState(state => _objectSpread(_objectSpread({}, state), {}, {\n        translateX: gestureState.dx\n      }));\n    });\n\n    this.state = {\n      translateX: 0\n    };\n    this.panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: () => true,\n      onStartShouldSetPanResponderCapture: () => true,\n      onPanResponderMove: this._handlePanResponderMove,\n      onPanResponderTerminationRequest: () => true\n    });\n  }\n\n  render() {\n    const transform = {\n      transform: [{\n        translateX: this.state.translateX\n      }]\n    };\n    return /*#__PURE__*/_jsx(View, {\n      style: styles.app,\n      children: /*#__PURE__*/_jsx(View, _objectSpread(_objectSpread({\n        style: styles.outer\n      }, this.panResponder.panHandlers), {}, {\n        children: /*#__PURE__*/_jsx(View, {\n          style: [styles.inner, transform]\n        })\n      }))\n    });\n  }\n\n}\nconst styles = StyleSheet.create({\n  app: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  outer: {\n    width: 250,\n    height: 50,\n    backgroundColor: 'skyblue'\n  },\n  inner: {\n    width: 30,\n    height: 30,\n    backgroundColor: 'lightblue'\n  }\n});","map":null,"metadata":{},"sourceType":"module"}