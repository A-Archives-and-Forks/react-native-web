{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createUncachedURI } from '../helpers';\nimport sources from '../sources';\nimport React, { PureComponent } from 'react';\nimport Button from \"react-native-web/dist/cjs/exports/Button\";\nimport Image from \"react-native-web/dist/cjs/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/cjs/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/cjs/exports/Text\";\nimport View from \"react-native-web/dist/cjs/exports/View\";\n\nclass ImagePrefetchExample extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      events: [],\n      showButton: true,\n      startLoad: false\n    });\n\n    _defineProperty(this, \"_handleLoad\", () => {\n      const startTime = this._startTime;\n\n      this._loadEventFired(`✔ (prefetched) onLoad (+${Date.now() - startTime}ms)`);\n    });\n\n    _defineProperty(this, \"_handleLoadEnd\", () => {\n      const startTime = this._startTime;\n\n      this._loadEventFired(`✔ (prefetched) onLoadEnd (+${Date.now() - startTime}ms)`);\n    });\n\n    _defineProperty(this, \"_handleLoadStart\", () => {\n      const startTime = this._startTime;\n\n      this._loadEventFired(`✔ (prefetched) onLoadStart (+${Date.now() - startTime}ms)`);\n    });\n\n    _defineProperty(this, \"_handlePress\", () => {\n      this._startTime = this._startTime || Date.now();\n      Image.prefetch(createUncachedURI(this.props.source.uri)).then(() => {\n        this._loadEventFired('✔ Prefetch OK');\n\n        this.setState(() => ({\n          startLoad: true\n        }));\n      }, error => {\n        this._loadEventFired(`✘ Prefetch failed (+${Date.now() - this._startTime}ms)`);\n\n        console.log(error);\n      });\n    });\n\n    _defineProperty(this, \"_loadEventFired\", event => {\n      this.setState(state => ({\n        events: [...state.events, event],\n        showButton: false\n      }));\n    });\n  }\n\n  render() {\n    const {\n      showButton,\n      startLoad\n    } = this.state;\n    return /*#__PURE__*/_jsxs(View, {\n      children: [showButton ? /*#__PURE__*/_jsx(View, {\n        style: styles.button,\n        children: /*#__PURE__*/_jsx(Button, {\n          onPress: this._handlePress,\n          title: \"Prefetch image\"\n        })\n      }) : null, startLoad ? /*#__PURE__*/_jsxs(View, {\n        children: [/*#__PURE__*/_jsx(Text, {\n          children: this.state.events.join('\\n')\n        }), /*#__PURE__*/_jsx(Image, {\n          onLoad: this._handleLoad,\n          onLoadEnd: this._handleLoadEnd,\n          onLoadStart: this._handleLoadStart,\n          source: this.props.source,\n          style: styles.image\n        })]\n      }) : null]\n    });\n  }\n\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    maxWidth: 300\n  },\n  image: {\n    backgroundColor: '#eee',\n    height: 150,\n    marginTop: 10,\n    width: 150\n  }\n});\n\nconst StaticPrefetchExample = () => /*#__PURE__*/_jsx(ImagePrefetchExample, {\n  source: sources.prefetchable\n});\n\nexport default StaticPrefetchExample;","map":null,"metadata":{},"sourceType":"module"}