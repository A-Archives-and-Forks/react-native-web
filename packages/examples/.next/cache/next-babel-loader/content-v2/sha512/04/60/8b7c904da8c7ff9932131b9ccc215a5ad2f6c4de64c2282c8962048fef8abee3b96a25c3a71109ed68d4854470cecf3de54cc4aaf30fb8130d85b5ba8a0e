{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useRef, useState } from 'react';\nimport Animated from \"react-native-web/dist/cjs/exports/Animated\";\nimport View from \"react-native-web/dist/cjs/exports/View\";\nimport StyleSheet from \"react-native-web/dist/cjs/exports/StyleSheet\";\nimport PanResponder from \"react-native-web/dist/cjs/exports/PanResponder\";\nimport Text from \"react-native-web/dist/cjs/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/cjs/exports/TouchableOpacity\";\n\nconst App = () => {\n  const pan = useRef(new Animated.ValueXY()).current;\n  const {\n    0: x,\n    1: setX\n  } = useState(0);\n  const panResponder = useRef(null);\n\n  if (panResponder.current == null) {\n    panResponder.current = PanResponder.create({\n      onMoveShouldSetPanResponder: () => true,\n      onPanResponderGrant: e => {\n        console.log('pan grant');\n        pan.setOffset({\n          x: pan.x._value,\n          y: pan.y._value\n        });\n      },\n      onPanResponderMove: Animated.event([null, {\n        dx: pan.x,\n        dy: pan.y\n      }]),\n      onPanResponderRelease: () => {\n        console.log('pan release');\n        pan.flattenOffset();\n      },\n\n      onPanResponderTerminate() {\n        console.log('pan terminate');\n        pan.flattenOffset();\n      }\n\n    });\n  }\n\n  return /*#__PURE__*/_jsxs(View, {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxs(Text, {\n      style: styles.titleText,\n      children: [\"Pressed: \", x]\n    }), /*#__PURE__*/_jsx(Animated.View, _objectSpread(_objectSpread({\n      style: {\n        transform: [{\n          translateX: pan.x\n        }, {\n          translateY: pan.y\n        }]\n      }\n    }, panResponder.current.panHandlers), {}, {\n      children: /*#__PURE__*/_jsx(View, {\n        style: styles.box,\n        children: /*#__PURE__*/_jsxs(TouchableOpacity, {\n          onPress: () => setX(x + 1),\n          style: styles.outerTouchable,\n          children: [/*#__PURE__*/_jsx(TouchableOpacity, {\n            onPress: () => {\n              console.log('press inner');\n            },\n            style: styles.innerTouchable\n          }), /*#__PURE__*/_jsx(TouchableOpacity, {\n            disabled: true,\n            style: styles.innerTouchable\n          }), /*#__PURE__*/_jsx(TouchableOpacity, {\n            accessibilityRole: \"button\",\n            disabled: true,\n            style: [styles.innerTouchable, styles.disabledButton]\n          })]\n        })\n      })\n    }))]\n  });\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    userSelect: 'none'\n  },\n  titleText: {\n    fontSize: 14,\n    lineHeight: 24,\n    fontWeight: 'bold'\n  },\n  box: {\n    height: 200,\n    width: 150,\n    backgroundColor: 'lightblue',\n    borderRadius: 5\n  },\n  outerTouchable: {\n    height: 150,\n    width: 100,\n    margin: 25,\n    backgroundColor: 'blue',\n    borderRadius: 5,\n    justifyContent: 'center'\n  },\n  innerTouchable: {\n    height: 20,\n    flex: 1,\n    marginVertical: 10,\n    marginHorizontal: 20,\n    backgroundColor: 'green',\n    borderRadius: 5\n  },\n  disabledButton: {\n    backgroundColor: 'red'\n  }\n});\nexport default App;","map":null,"metadata":{},"sourceType":"module"}