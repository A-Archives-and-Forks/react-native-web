{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { styles as helperStyles } from '../helpers';\nimport StyleSheet from \"react-native-web/dist/cjs/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/cjs/exports/Text\";\nimport TextInput from \"react-native-web/dist/cjs/exports/TextInput\";\nimport View from \"react-native-web/dist/cjs/exports/View\";\n\nvar TextInputRewrite = /*#__PURE__*/function (_React$Component) {\n  _inherits(TextInputRewrite, _React$Component);\n\n  var _super = _createSuper(TextInputRewrite);\n\n  function TextInputRewrite() {\n    var _this;\n\n    _classCallCheck(this, TextInputRewrite);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      text: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChangeText\", function (text) {\n      text = text.replace(/ /g, '_');\n\n      _this.setState({\n        text: text\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(TextInputRewrite, [{\n    key: \"render\",\n    value: function render() {\n      var limit = 20;\n      var remainder = limit - this.state.text.length;\n      var remainderColor = remainder > 5 ? 'blue' : 'red';\n      return /*#__PURE__*/_jsxs(View, {\n        style: styles.rewriteContainer,\n        children: [/*#__PURE__*/_jsx(TextInput, {\n          maxLength: limit,\n          multiline: false,\n          onChangeText: this.handleChangeText,\n          style: helperStyles.textinput,\n          value: this.state.text\n        }), /*#__PURE__*/_jsx(Text, {\n          style: [styles.remainder, {\n            color: remainderColor\n          }],\n          children: remainder\n        })]\n      });\n    }\n  }]);\n\n  return TextInputRewrite;\n}(React.Component);\n\nexport { TextInputRewrite as default };\nexport var TextInputRewriteInvalidCharacters = /*#__PURE__*/function (_React$Component2) {\n  _inherits(TextInputRewriteInvalidCharacters, _React$Component2);\n\n  var _super2 = _createSuper(TextInputRewriteInvalidCharacters);\n\n  function TextInputRewriteInvalidCharacters() {\n    var _this2;\n\n    _classCallCheck(this, TextInputRewriteInvalidCharacters);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this2 = _super2.call.apply(_super2, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this2), \"state\", {\n      text: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"handleChangeText\", function (text) {\n      text = text.replace(/\\s/g, '_');\n\n      _this2.setState({\n        text: text\n      });\n    });\n\n    return _this2;\n  }\n\n  _createClass(TextInputRewriteInvalidCharacters, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsx(View, {\n        style: styles.rewriteContainer,\n        children: /*#__PURE__*/_jsx(TextInput, {\n          multiline: false,\n          onChangeText: this.handleChangeText,\n          style: helperStyles.textinput,\n          value: this.state.text\n        })\n      });\n    }\n  }]);\n\n  return TextInputRewriteInvalidCharacters;\n}(React.Component);\nvar styles = StyleSheet.create({\n  rewriteContainer: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  remainder: {\n    textAlign: 'right',\n    width: 24\n  }\n});","map":null,"metadata":{},"sourceType":"module"}