{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/necolas/OpenSource/github/necolas/react-native-web/packages/examples/shared/ModalExample/examples/Animated.js\";\nimport React, { useState } from 'react';\nimport Modal from \"react-native-web/dist/cjs/exports/Modal\";\nimport Text from \"react-native-web/dist/cjs/exports/Text\";\nimport Button from \"react-native-web/dist/cjs/exports/Button\";\nimport View from \"react-native-web/dist/cjs/exports/View\";\nimport StyleSheet from \"react-native-web/dist/cjs/exports/StyleSheet\";\n\nfunction Gap() {\n  return /*#__PURE__*/_jsxDEV(View, {\n    style: styles.gap\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n}\n\nfunction AnimatedModal({\n  animationType\n}) {\n  const {\n    0: isVisible,\n    1: setIsVisible\n  } = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onPress: () => setIsVisible(true),\n      title: `Animation '${animationType}'`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      animationType: animationType,\n      onRequestClose: () => setIsVisible(false),\n      visible: isVisible,\n      children: /*#__PURE__*/_jsxDEV(View, {\n        style: styles.container,\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: [\"Modal with \\\"animationType\\\" of \\\"\", animationType, \"\\\"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Gap, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onPress: () => setIsVisible(false),\n          title: 'Close Modal'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\nexport default function AnimatedModalStack() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AnimatedModal, {\n      animationType: 'none'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Gap, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnimatedModal, {\n      animationType: 'slide'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Gap, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnimatedModal, {\n      animationType: 'fade'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    flex: 1,\n    justifyContent: 'center'\n  },\n  gap: {\n    height: 10\n  }\n});","map":{"version":3,"sources":["/Users/necolas/OpenSource/github/necolas/react-native-web/packages/examples/shared/ModalExample/examples/Animated.js"],"names":["React","useState","Gap","styles","gap","AnimatedModal","animationType","isVisible","setIsVisible","container","AnimatedModalStack","StyleSheet","create","alignItems","flex","justifyContent","height"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;AAGA,SAASC,GAAT,GAAe;AACb,sBAAO,QAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC;AAApB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAED,SAASC,aAAT,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAA0C;AACxC,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BP,QAAQ,CAAC,KAAD,CAA1C;AAEA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAMO,YAAY,CAAC,IAAD,CAAnC;AAA2C,MAAA,KAAK,EAAG,cAAaF,aAAc;AAA9E;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AACE,MAAA,aAAa,EAAEA,aADjB;AAEE,MAAA,cAAc,EAAE,MAAME,YAAY,CAAC,KAAD,CAFpC;AAGE,MAAA,OAAO,EAAED,SAHX;AAAA,6BAKE,QAAC,IAAD;AAAM,QAAA,KAAK,EAAEJ,MAAM,CAACM,SAApB;AAAA,gCACE,QAAC,IAAD;AAAA,2DAAsCH,aAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,MAAME,YAAY,CAAC,KAAD,CAAnC;AAA4C,UAAA,KAAK,EAAE;AAAnD;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAgBD;;AAED,eAAe,SAASE,kBAAT,GAA8B;AAC3C,sBACE;AAAA,4BACE,QAAC,aAAD;AAAe,MAAA,aAAa,EAAE;AAA9B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,aAAD;AAAe,MAAA,aAAa,EAAE;AAA9B;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,aAAD;AAAe,MAAA,aAAa,EAAE;AAA9B;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AASD;AAED,MAAMP,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,SAAS,EAAE;AACTI,IAAAA,UAAU,EAAE,QADH;AAETC,IAAAA,IAAI,EAAE,CAFG;AAGTC,IAAAA,cAAc,EAAE;AAHP,GADoB;AAM/BX,EAAAA,GAAG,EAAE;AACHY,IAAAA,MAAM,EAAE;AADL;AAN0B,CAAlB,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Modal, Text, Button, View, StyleSheet } from 'react-native';\n\nfunction Gap() {\n  return <View style={styles.gap} />;\n}\n\nfunction AnimatedModal({ animationType }) {\n  const [isVisible, setIsVisible] = useState(false);\n\n  return (\n    <>\n      <Button onPress={() => setIsVisible(true)} title={`Animation '${animationType}'`} />\n      <Modal\n        animationType={animationType}\n        onRequestClose={() => setIsVisible(false)}\n        visible={isVisible}\n      >\n        <View style={styles.container}>\n          <Text>Modal with \"animationType\" of \"{animationType}\"</Text>\n          <Gap />\n          <Button onPress={() => setIsVisible(false)} title={'Close Modal'} />\n        </View>\n      </Modal>\n    </>\n  );\n}\n\nexport default function AnimatedModalStack() {\n  return (\n    <>\n      <AnimatedModal animationType={'none'} />\n      <Gap />\n      <AnimatedModal animationType={'slide'} />\n      <Gap />\n      <AnimatedModal animationType={'fade'} />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    flex: 1,\n    justifyContent: 'center'\n  },\n  gap: {\n    height: 10\n  }\n});\n"]},"metadata":{},"sourceType":"module"}