{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport ScrollView from \"react-native-web/dist/cjs/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/cjs/exports/StyleSheet\";\nimport View from \"react-native-web/dist/cjs/exports/View\";\nimport Title from './Title';\nexport default class Page extends React.Component {\n  render() {\n    let ContentWrapper;\n    const wrapperProps = {};\n\n    if (this.props.noScroll) {\n      ContentWrapper = View;\n    } else {\n      ContentWrapper = ScrollView; // $FlowFixMe found when converting React.createClass to ES6\n\n      wrapperProps.automaticallyAdjustContentInsets = !this.props.title;\n      wrapperProps.keyboardShouldPersistTaps = 'handled';\n      wrapperProps.keyboardDismissMode = 'interactive';\n    }\n\n    const title = this.props.title ? /*#__PURE__*/_jsx(Title, {\n      title: this.props.title\n    }) : null;\n    const spacer = this.props.noSpacer ? null : /*#__PURE__*/_jsx(View, {\n      style: styles.spacer\n    });\n    return /*#__PURE__*/_jsxs(View, {\n      style: styles.container,\n      children: [title, /*#__PURE__*/_jsxs(ContentWrapper, _objectSpread(_objectSpread({\n        style: styles.wrapper\n      }, wrapperProps), {}, {\n        children: [this.props.children, spacer]\n      }))]\n    });\n  }\n\n}\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#e9eaed',\n    flex: 1,\n    maxWidth: 600,\n    margin: 'auto',\n    width: '100%'\n  },\n  spacer: {\n    height: 270\n  },\n  wrapper: {\n    flex: 1,\n    paddingTop: 10\n  }\n});","map":null,"metadata":{},"sourceType":"module"}