{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport StyleSheet from \"react-native-web/dist/cjs/exports/StyleSheet\";\n\nconst createUncachedURI = source => {\n  const helper = str => `${str}?t=${Date.now()}`;\n\n  const uri = typeof source === 'string' ? source : source.uri;\n  return typeof source === 'string' ? helper(uri) : _objectSpread(_objectSpread({}, source), {}, {\n    uri: helper(uri)\n  });\n};\n\nconst styles = StyleSheet.create({\n  base: {\n    height: 200,\n    width: 300\n  },\n  row: {\n    flexDirection: 'row'\n  },\n  centerRow: {\n    alignItems: 'center'\n  },\n  marginTop: {\n    marginTop: '1rem'\n  }\n});\nexport { createUncachedURI, styles };","map":{"version":3,"sources":["/Users/necolas/OpenSource/github/necolas/react-native-web/packages/examples/shared/ImageExample/helpers.js"],"names":["createUncachedURI","source","helper","str","Date","now","uri","styles","StyleSheet","create","base","height","width","row","flexDirection","centerRow","alignItems","marginTop"],"mappings":";;;;;;;;AAEA,MAAMA,iBAAiB,GAAGC,MAAM,IAAI;AAClC,QAAMC,MAAM,GAAGC,GAAG,IAAK,GAAEA,GAAI,MAAKC,IAAI,CAACC,GAAL,EAAW,EAA7C;;AACA,QAAMC,GAAG,GAAG,OAAOL,MAAP,KAAkB,QAAlB,GAA6BA,MAA7B,GAAsCA,MAAM,CAACK,GAAzD;AACA,SAAO,OAAOL,MAAP,KAAkB,QAAlB,GAA6BC,MAAM,CAACI,GAAD,CAAnC,mCAAgDL,MAAhD;AAAwDK,IAAAA,GAAG,EAAEJ,MAAM,CAACI,GAAD;AAAnE,IAAP;AACD,CAJD;;AAMA,MAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAE,GADJ;AAEJC,IAAAA,KAAK,EAAE;AAFH,GADyB;AAK/BC,EAAAA,GAAG,EAAE;AACHC,IAAAA,aAAa,EAAE;AADZ,GAL0B;AAQ/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,UAAU,EAAE;AADH,GARoB;AAW/BC,EAAAA,SAAS,EAAE;AACTA,IAAAA,SAAS,EAAE;AADF;AAXoB,CAAlB,CAAf;AAgBA,SAASjB,iBAAT,EAA4BO,MAA5B","sourcesContent":["import { StyleSheet } from 'react-native';\n\nconst createUncachedURI = source => {\n  const helper = str => `${str}?t=${Date.now()}`;\n  const uri = typeof source === 'string' ? source : source.uri;\n  return typeof source === 'string' ? helper(uri) : { ...source, uri: helper(uri) };\n};\n\nconst styles = StyleSheet.create({\n  base: {\n    height: 200,\n    width: 300\n  },\n  row: {\n    flexDirection: 'row'\n  },\n  centerRow: {\n    alignItems: 'center'\n  },\n  marginTop: {\n    marginTop: '1rem'\n  }\n});\n\nexport { createUncachedURI, styles };\n"]},"metadata":{},"sourceType":"module"}