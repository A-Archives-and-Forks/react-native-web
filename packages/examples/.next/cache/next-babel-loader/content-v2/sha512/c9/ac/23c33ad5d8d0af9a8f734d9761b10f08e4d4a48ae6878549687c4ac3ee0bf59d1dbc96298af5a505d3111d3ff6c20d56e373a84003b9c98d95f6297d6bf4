{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/cjs/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/cjs/exports/Text\";\nimport View from \"react-native-web/dist/cjs/exports/View\";\nconst l1 = {\n  width: '100%',\n  paddingLeft: 0,\n  paddingTop: 0\n};\nconst l2 = {\n  width: '75%',\n  paddingLeft: 10,\n  paddingTop: 10\n};\n\nclass OnLayoutExample extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      layoutInfo: {}\n    });\n\n    _defineProperty(this, \"_handleLayout\", ({\n      nativeEvent\n    }) => {\n      this.setState(() => ({\n        layoutInfo: nativeEvent.layout\n      }));\n    });\n\n    _defineProperty(this, \"_setRef\", component => {\n      this._ref = component;\n    });\n  }\n\n  componentDidMount() {\n    this._layout = l1;\n    this._interval = setInterval(() => {\n      if (this._ref) {\n        this._ref.setNativeProps({\n          style: this._layout\n        });\n\n        this._layout = this._layout.width === '100%' ? l2 : l1;\n      }\n    }, 2000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this._interval);\n  }\n\n  render() {\n    const {\n      x,\n      y,\n      width,\n      height\n    } = this.state.layoutInfo;\n    return /*#__PURE__*/_jsxs(View, {\n      style: styles.root,\n      children: [/*#__PURE__*/_jsxs(View, {\n        style: styles.left,\n        children: [/*#__PURE__*/_jsxs(Text, {\n          children: [\"x: \", x]\n        }), /*#__PURE__*/_jsxs(Text, {\n          children: [\"y: \", y]\n        }), /*#__PURE__*/_jsxs(Text, {\n          children: [\"width: \", width]\n        }), /*#__PURE__*/_jsxs(Text, {\n          children: [\"height: \", height]\n        })]\n      }), /*#__PURE__*/_jsx(View, {\n        style: styles.right,\n        children: /*#__PURE__*/_jsx(View, {\n          ref: this._setRef,\n          style: styles.container,\n          children: /*#__PURE__*/_jsx(View, {\n            onLayout: this._handleLayout,\n            style: styles.box\n          })\n        })\n      })]\n    });\n  }\n\n}\n\nexport default function OnLayout() {\n  return /*#__PURE__*/_jsx(OnLayoutExample, {});\n}\nconst styles = StyleSheet.create({\n  root: {\n    flexDirection: 'row'\n  },\n  container: {\n    height: 50\n  },\n  left: {\n    width: 100\n  },\n  right: {\n    flex: 1\n  },\n  box: {\n    backgroundColor: '#eee',\n    flex: 1\n  }\n});","map":null,"metadata":{},"sourceType":"module"}