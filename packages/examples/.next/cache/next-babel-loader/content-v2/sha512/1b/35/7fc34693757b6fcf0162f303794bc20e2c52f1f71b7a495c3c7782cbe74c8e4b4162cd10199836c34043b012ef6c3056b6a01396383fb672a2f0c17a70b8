{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/necolas/OpenSource/github/necolas/react-native-web/packages/examples/pages/text-input/examples/OnSelectionChangeControlled.js\",\n    _this3 = this;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { styles } from '../helpers';\nimport Text from \"react-native-web/dist/cjs/exports/Text\";\nimport TextInput from \"react-native-web/dist/cjs/exports/TextInput\";\nimport View from \"react-native-web/dist/cjs/exports/View\";\n\nvar OnSelectionChangeExample = /*#__PURE__*/function (_React$Component) {\n  _inherits(OnSelectionChangeExample, _React$Component);\n\n  var _super = _createSuper(OnSelectionChangeExample);\n\n  function OnSelectionChangeExample(props) {\n    var _this;\n\n    _classCallCheck(this, OnSelectionChangeExample);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"onSelectionChange\", function (_ref) {\n      var selection = _ref.nativeEvent.selection;\n\n      _this.setState({\n        selection: selection\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChangeText\", function (value) {\n      _this.setState({\n        value: value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"select\", function (start, end) {\n      return function () {\n        _this._textInput.focus();\n\n        _this.setState({\n          selection: {\n            start: start,\n            end: end\n          }\n        });\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"selectRandom\", function () {\n      var _this2;\n\n      var positions = [_this.getRandomPosition(), _this.getRandomPosition()].sort();\n\n      (_this2 = _this).select.apply(_this2, _toConsumableArray(positions))();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"placeAt\", function (position) {\n      return function () {\n        _this.select(position, position)();\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"placeAtRandom\", function () {\n      _this.placeAt(_this.getRandomPosition())();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setRef\", function (textInput) {\n      _this._textInput = textInput;\n    });\n\n    _this.state = {\n      selection: {\n        start: 0,\n        end: 0\n      },\n      value: props.value\n    };\n    return _this;\n  }\n\n  _createClass(OnSelectionChangeExample, [{\n    key: \"getRandomPosition\",\n    value: function getRandomPosition() {\n      var length = this.state.value.length;\n      return Math.round(Math.random() * length);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var length = this.state.value.length;\n      return /*#__PURE__*/_jsxDEV(View, {\n        children: [/*#__PURE__*/_jsxDEV(TextInput, {\n          multiline: this.props.multiline,\n          onChangeText: this.onChangeText,\n          onSelectionChange: this.onSelectionChange,\n          ref: this.setRef,\n          selection: this.state.selection,\n          style: this.props.style,\n          value: this.state.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(View, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            children: [\"selection = \", JSON.stringify(this.state.selection)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            onPress: this.placeAt(0),\n            children: \"Place at Start (0, 0)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            onPress: this.placeAt(length),\n            children: [\"Place at End (\", length, \", \", length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            onPress: this.placeAtRandom,\n            children: \"Place at Random\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            onPress: this.select(0, length),\n            children: \"Select All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            onPress: this.selectRandom,\n            children: \"Select Random\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return OnSelectionChangeExample;\n}(React.Component);\n\nvar TextInputOnSelectionChangeExample = function TextInputOnSelectionChangeExample() {\n  return /*#__PURE__*/_jsxDEV(View, {\n    children: [/*#__PURE__*/_jsxDEV(OnSelectionChangeExample, {\n      style: styles.textinput,\n      value: \"text selection can be changed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }, _this3), /*#__PURE__*/_jsxDEV(OnSelectionChangeExample, {\n      multiline: true,\n      style: styles.multiline,\n      value: 'multiline text selection\\ncan also be changed'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }, _this3)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 3\n  }, _this3);\n};\n\n_c = TextInputOnSelectionChangeExample;\nexport default function OnSelectionChange() {\n  return /*#__PURE__*/_jsxDEV(TextInputOnSelectionChangeExample, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 10\n  }, this);\n}\n_c2 = OnSelectionChange;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TextInputOnSelectionChangeExample\");\n$RefreshReg$(_c2, \"OnSelectionChange\");","map":{"version":3,"sources":["/Users/necolas/OpenSource/github/necolas/react-native-web/packages/examples/pages/text-input/examples/OnSelectionChangeControlled.js"],"names":["React","styles","OnSelectionChangeExample","props","selection","nativeEvent","setState","value","start","end","_textInput","focus","positions","getRandomPosition","sort","select","position","placeAt","textInput","state","length","Math","round","random","multiline","onChangeText","onSelectionChange","setRef","style","JSON","stringify","placeAtRandom","selectRandom","Component","TextInputOnSelectionChangeExample","textinput","OnSelectionChange"],"mappings":"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","sourcesContent":["/**\n * @noflow\n */\n\nimport React from 'react';\nimport { styles } from '../helpers';\nimport { Text, TextInput, View } from 'react-native';\n\ntype SelectionExampleState = {\n  selection: {\n    start: number,\n    end?: number\n  },\n  value: string\n};\n\nclass OnSelectionChangeExample extends React.Component {\n  state: SelectionExampleState;\n\n  _textInput: any;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      selection: { start: 0, end: 0 },\n      value: props.value\n    };\n  }\n\n  onSelectionChange = ({ nativeEvent: { selection } }) => {\n    this.setState({ selection });\n  };\n\n  onChangeText = value => {\n    this.setState({ value });\n  };\n\n  getRandomPosition() {\n    const length = this.state.value.length;\n    return Math.round(Math.random() * length);\n  }\n\n  select = (start, end) => () => {\n    this._textInput.focus();\n    this.setState({ selection: { start, end } });\n  };\n\n  selectRandom = () => {\n    const positions = [this.getRandomPosition(), this.getRandomPosition()].sort();\n    this.select(...positions)();\n  };\n\n  placeAt = position => () => {\n    this.select(position, position)();\n  };\n\n  placeAtRandom = () => {\n    this.placeAt(this.getRandomPosition())();\n  };\n\n  setRef = textInput => {\n    this._textInput = textInput;\n  };\n\n  render() {\n    const length = this.state.value.length;\n\n    return (\n      <View>\n        <TextInput\n          multiline={this.props.multiline}\n          onChangeText={this.onChangeText}\n          onSelectionChange={this.onSelectionChange}\n          ref={this.setRef}\n          selection={this.state.selection}\n          style={this.props.style}\n          value={this.state.value}\n        />\n        <View>\n          <Text>selection = {JSON.stringify(this.state.selection)}</Text>\n          <Text onPress={this.placeAt(0)}>Place at Start (0, 0)</Text>\n          <Text onPress={this.placeAt(length)}>\n            Place at End ({length}, {length})\n          </Text>\n          <Text onPress={this.placeAtRandom}>Place at Random</Text>\n          <Text onPress={this.select(0, length)}>Select All</Text>\n          <Text onPress={this.selectRandom}>Select Random</Text>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst TextInputOnSelectionChangeExample = () => (\n  <View>\n    <OnSelectionChangeExample style={styles.textinput} value=\"text selection can be changed\" />\n    <OnSelectionChangeExample\n      multiline\n      style={styles.multiline}\n      value={'multiline text selection\\ncan also be changed'}\n    />\n  </View>\n);\n\nexport default function OnSelectionChange() {\n  return <TextInputOnSelectionChangeExample />;\n}\n"]},"metadata":{},"sourceType":"module"}