{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/necolas/OpenSource/github/necolas/react-native-web/packages/examples/shared/PanResponderExample/examples/LocationXY.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/cjs/exports/StyleSheet\";\nimport View from \"react-native-web/dist/cjs/exports/View\";\nimport PanResponder from \"react-native-web/dist/cjs/exports/PanResponder\";\nexport default class LocationXY extends Component {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"_handlePanResponderMove\", (e, gestureState) => {\n      console.log(e.nativeEvent.locationX, e.nativeEvent.locationY);\n      this.setState(state => _objectSpread(_objectSpread({}, state), {}, {\n        translateX: gestureState.dx\n      }));\n    });\n\n    this.state = {\n      translateX: 0\n    };\n    this.panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: () => true,\n      onStartShouldSetPanResponderCapture: () => true,\n      onPanResponderMove: this._handlePanResponderMove,\n      onPanResponderTerminationRequest: () => true\n    });\n  }\n\n  render() {\n    const transform = {\n      transform: [{\n        translateX: this.state.translateX\n      }]\n    };\n    return /*#__PURE__*/_jsxDEV(View, {\n      style: styles.app,\n      children: /*#__PURE__*/_jsxDEV(View, _objectSpread(_objectSpread({\n        style: styles.outer\n      }, this.panResponder.panHandlers), {}, {\n        children: /*#__PURE__*/_jsxDEV(View, {\n          style: [styles.inner, transform]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nconst styles = StyleSheet.create({\n  app: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  outer: {\n    width: 250,\n    height: 50,\n    backgroundColor: 'skyblue'\n  },\n  inner: {\n    width: 30,\n    height: 30,\n    backgroundColor: 'lightblue'\n  }\n});","map":{"version":3,"sources":["/Users/necolas/OpenSource/github/necolas/react-native-web/packages/examples/shared/PanResponderExample/examples/LocationXY.js"],"names":["React","Component","LocationXY","constructor","e","gestureState","console","log","nativeEvent","locationX","locationY","setState","state","translateX","dx","panResponder","PanResponder","create","onStartShouldSetPanResponder","onStartShouldSetPanResponderCapture","onPanResponderMove","_handlePanResponderMove","onPanResponderTerminationRequest","render","transform","styles","app","outer","panHandlers","inner","StyleSheet","justifyContent","alignItems","width","height","backgroundColor"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAGA,eAAe,MAAMC,UAAN,SAAyBD,SAAzB,CAAmC;AAChDE,EAAAA,WAAW,GAAG;AACZ;;AADY,qDAWY,CAACC,CAAD,EAAIC,YAAJ,KAAqB;AAC7CC,MAAAA,OAAO,CAACC,GAAR,CAAYH,CAAC,CAACI,WAAF,CAAcC,SAA1B,EAAqCL,CAAC,CAACI,WAAF,CAAcE,SAAnD;AACA,WAAKC,QAAL,CAAcC,KAAK,oCACdA,KADc;AAEjBC,QAAAA,UAAU,EAAER,YAAY,CAACS;AAFR,QAAnB;AAID,KAjBa;;AAEZ,SAAKF,KAAL,GAAa;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAAb;AACA,SAAKE,YAAL,GAAoBC,YAAY,CAACC,MAAb,CAAoB;AACtCC,MAAAA,4BAA4B,EAAE,MAAM,IADE;AAEtCC,MAAAA,mCAAmC,EAAE,MAAM,IAFL;AAGtCC,MAAAA,kBAAkB,EAAE,KAAKC,uBAHa;AAItCC,MAAAA,gCAAgC,EAAE,MAAM;AAJF,KAApB,CAApB;AAMD;;AAUDC,EAAAA,MAAM,GAAG;AACP,UAAMC,SAAS,GAAG;AAAEA,MAAAA,SAAS,EAAE,CAAC;AAAEX,QAAAA,UAAU,EAAE,KAAKD,KAAL,CAAWC;AAAzB,OAAD;AAAb,KAAlB;AACA,wBACE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEY,MAAM,CAACC,GAApB;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE;AAApB,SAA+B,KAAKZ,YAAL,CAAkBa,WAAjD;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,KAAK,EAAE,CAACH,MAAM,CAACI,KAAR,EAAeL,SAAf;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AA7B+C;AAgClD,MAAMC,MAAM,GAAGK,UAAU,CAACb,MAAX,CAAkB;AAC/BS,EAAAA,GAAG,EAAE;AACHK,IAAAA,cAAc,EAAE,QADb;AAEHC,IAAAA,UAAU,EAAE;AAFT,GAD0B;AAK/BL,EAAAA,KAAK,EAAE;AACLM,IAAAA,KAAK,EAAE,GADF;AAELC,IAAAA,MAAM,EAAE,EAFH;AAGLC,IAAAA,eAAe,EAAE;AAHZ,GALwB;AAU/BN,EAAAA,KAAK,EAAE;AACLI,IAAAA,KAAK,EAAE,EADF;AAELC,IAAAA,MAAM,EAAE,EAFH;AAGLC,IAAAA,eAAe,EAAE;AAHZ;AAVwB,CAAlB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { StyleSheet, View, PanResponder } from 'react-native';\n\nexport default class LocationXY extends Component {\n  constructor() {\n    super();\n    this.state = { translateX: 0 };\n    this.panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: () => true,\n      onStartShouldSetPanResponderCapture: () => true,\n      onPanResponderMove: this._handlePanResponderMove,\n      onPanResponderTerminationRequest: () => true\n    });\n  }\n\n  _handlePanResponderMove = (e, gestureState) => {\n    console.log(e.nativeEvent.locationX, e.nativeEvent.locationY);\n    this.setState(state => ({\n      ...state,\n      translateX: gestureState.dx\n    }));\n  };\n\n  render() {\n    const transform = { transform: [{ translateX: this.state.translateX }] };\n    return (\n      <View style={styles.app}>\n        <View style={styles.outer} {...this.panResponder.panHandlers}>\n          <View style={[styles.inner, transform]} />\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  app: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  outer: {\n    width: 250,\n    height: 50,\n    backgroundColor: 'skyblue'\n  },\n  inner: {\n    width: 30,\n    height: 30,\n    backgroundColor: 'lightblue'\n  }\n});\n"]},"metadata":{},"sourceType":"module"}