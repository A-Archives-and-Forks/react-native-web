{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/necolas/OpenSource/github/necolas/react-native-web/packages/examples/shared/ImageExample/examples/StaticGetSize.js\",\n    _this2 = this;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { createUncachedURI } from '../helpers';\nimport sources from '../sources';\nimport React, { PureComponent } from 'react';\nimport Button from \"react-native-web/dist/cjs/exports/Button\";\nimport Image from \"react-native-web/dist/cjs/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/cjs/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/cjs/exports/Text\";\nimport View from \"react-native-web/dist/cjs/exports/View\";\n\nvar ImageGetSizeExample = /*#__PURE__*/function (_PureComponent) {\n  _inherits(ImageGetSizeExample, _PureComponent);\n\n  var _super = _createSuper(ImageGetSizeExample);\n\n  function ImageGetSizeExample() {\n    var _this;\n\n    _classCallCheck(this, ImageGetSizeExample);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      showButton: true,\n      startLoad: false,\n      width: 0,\n      height: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handlePress\", function () {\n      Image.getSize(_this.props.source.uri, function (width, height) {\n        _this.setState({\n          startLoad: true,\n          showButton: false,\n          width: width,\n          height: height\n        });\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(ImageGetSizeExample, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          showButton = _this$state.showButton,\n          startLoad = _this$state.startLoad;\n      return /*#__PURE__*/_jsxDEV(View, {\n        children: [showButton ? /*#__PURE__*/_jsxDEV(View, {\n          style: styles.button,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onPress: this._handlePress,\n            title: \"Get image dimensions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this) : null, startLoad ? /*#__PURE__*/_jsxDEV(View, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            children: [\"Source dimensions:\", ' ', JSON.stringify({\n              width: this.state.width,\n              height: this.state.height\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Image, {\n            source: createUncachedURI(this.props.source.uri),\n            style: styles.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return ImageGetSizeExample;\n}(PureComponent);\n\nvar styles = StyleSheet.create({\n  button: {\n    maxWidth: 300\n  },\n  image: {\n    backgroundColor: '#eee',\n    height: 230,\n    marginTop: 10,\n    width: 320\n  }\n});\n\nvar StaticGetSizeExample = function StaticGetSizeExample() {\n  return /*#__PURE__*/_jsxDEV(ImageGetSizeExample, {\n    source: sources.pjpeg\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 36\n  }, _this2);\n};\n\n_c = StaticGetSizeExample;\nexport default StaticGetSizeExample;\n\nvar _c;\n\n$RefreshReg$(_c, \"StaticGetSizeExample\");","map":{"version":3,"sources":["/Users/necolas/OpenSource/github/necolas/react-native-web/packages/examples/shared/ImageExample/examples/StaticGetSize.js"],"names":["createUncachedURI","sources","React","PureComponent","ImageGetSizeExample","showButton","startLoad","width","height","Image","getSize","props","source","uri","setState","state","styles","button","_handlePress","JSON","stringify","image","StyleSheet","create","maxWidth","backgroundColor","marginTop","StaticGetSizeExample","pjpeg"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,iBAAT,QAAkC,YAAlC;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;;;;;;;IAGMC,mB;;;;;;;;;;;;;;;;4DACI;AACNC,MAAAA,UAAU,EAAE,IADN;AAENC,MAAAA,SAAS,EAAE,KAFL;AAGNC,MAAAA,KAAK,EAAE,CAHD;AAINC,MAAAA,MAAM,EAAE;AAJF,K;;mEA8BO,YAAM;AACnBC,MAAAA,KAAK,CAACC,OAAN,CAAc,MAAKC,KAAL,CAAWC,MAAX,CAAkBC,GAAhC,EAAqC,UAACN,KAAD,EAAQC,MAAR,EAAmB;AACtD,cAAKM,QAAL,CAAc;AAAER,UAAAA,SAAS,EAAE,IAAb;AAAmBD,UAAAA,UAAU,EAAE,KAA/B;AAAsCE,UAAAA,KAAK,EAALA,KAAtC;AAA6CC,UAAAA,MAAM,EAANA;AAA7C,SAAd;AACD,OAFD;AAGD,K;;;;;;;6BA3BQ;AAAA,wBAC2B,KAAKO,KADhC;AAAA,UACCV,UADD,eACCA,UADD;AAAA,UACaC,SADb,eACaA,SADb;AAGP,0BACE,QAAC,IAAD;AAAA,mBACGD,UAAU,gBACT,QAAC,IAAD;AAAM,UAAA,KAAK,EAAEW,MAAM,CAACC,MAApB;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAE,KAAKC,YAAtB;AAAoC,YAAA,KAAK,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADS,GAIP,IALN,EAMGZ,SAAS,gBACR,QAAC,IAAD;AAAA,kCACE,QAAC,IAAD;AAAA,6CACqB,GADrB,EAEGa,IAAI,CAACC,SAAL,CAAe;AAAEb,cAAAA,KAAK,EAAE,KAAKQ,KAAL,CAAWR,KAApB;AAA2BC,cAAAA,MAAM,EAAE,KAAKO,KAAL,CAAWP;AAA9C,aAAf,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE,QAAC,KAAD;AAAO,YAAA,MAAM,EAAER,iBAAiB,CAAC,KAAKW,KAAL,CAAWC,MAAX,CAAkBC,GAAnB,CAAhC;AAAyD,YAAA,KAAK,EAAEG,MAAM,CAACK;AAAvE;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADQ,GAQN,IAdN;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAkBD;;;;EA7B+BlB,a;;AAsClC,IAAMa,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,MAAM,EAAE;AACNO,IAAAA,QAAQ,EAAE;AADJ,GADuB;AAI/BH,EAAAA,KAAK,EAAE;AACLI,IAAAA,eAAe,EAAE,MADZ;AAELjB,IAAAA,MAAM,EAAE,GAFH;AAGLkB,IAAAA,SAAS,EAAE,EAHN;AAILnB,IAAAA,KAAK,EAAE;AAJF;AAJwB,CAAlB,CAAf;;AAYA,IAAMoB,oBAAoB,GAAG,SAAvBA,oBAAuB;AAAA,sBAAM,QAAC,mBAAD;AAAqB,IAAA,MAAM,EAAE1B,OAAO,CAAC2B;AAArC;AAAA;AAAA;AAAA;AAAA,YAAN;AAAA,CAA7B;;KAAMD,oB;AAEN,eAAeA,oBAAf","sourcesContent":["import { createUncachedURI } from '../helpers';\nimport sources from '../sources';\nimport React, { PureComponent } from 'react';\nimport { Button, Image, StyleSheet, Text, View } from 'react-native';\n\nclass ImageGetSizeExample extends PureComponent {\n  state = {\n    showButton: true,\n    startLoad: false,\n    width: 0,\n    height: 0\n  };\n\n  render() {\n    const { showButton, startLoad } = this.state;\n\n    return (\n      <View>\n        {showButton ? (\n          <View style={styles.button}>\n            <Button onPress={this._handlePress} title=\"Get image dimensions\" />\n          </View>\n        ) : null}\n        {startLoad ? (\n          <View>\n            <Text>\n              Source dimensions:{' '}\n              {JSON.stringify({ width: this.state.width, height: this.state.height })}\n            </Text>\n            <Image source={createUncachedURI(this.props.source.uri)} style={styles.image} />\n          </View>\n        ) : null}\n      </View>\n    );\n  }\n\n  _handlePress = () => {\n    Image.getSize(this.props.source.uri, (width, height) => {\n      this.setState({ startLoad: true, showButton: false, width, height });\n    });\n  };\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    maxWidth: 300\n  },\n  image: {\n    backgroundColor: '#eee',\n    height: 230,\n    marginTop: 10,\n    width: 320\n  }\n});\n\nconst StaticGetSizeExample = () => <ImageGetSizeExample source={sources.pjpeg} />;\n\nexport default StaticGetSizeExample;\n"]},"metadata":{},"sourceType":"module"}