{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/necolas/OpenSource/github/necolas/react-native-web/packages/examples/shared/ImageExample/examples/StaticGetSize.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createUncachedURI } from '../helpers';\nimport sources from '../sources';\nimport React, { PureComponent } from 'react';\nimport Button from \"react-native-web/dist/cjs/exports/Button\";\nimport Image from \"react-native-web/dist/cjs/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/cjs/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/cjs/exports/Text\";\nimport View from \"react-native-web/dist/cjs/exports/View\";\n\nclass ImageGetSizeExample extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      showButton: true,\n      startLoad: false,\n      width: 0,\n      height: 0\n    });\n\n    _defineProperty(this, \"_handlePress\", () => {\n      Image.getSize(this.props.source.uri, (width, height) => {\n        this.setState({\n          startLoad: true,\n          showButton: false,\n          width,\n          height\n        });\n      });\n    });\n  }\n\n  render() {\n    const {\n      showButton,\n      startLoad\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(View, {\n      children: [showButton ? /*#__PURE__*/_jsxDEV(View, {\n        style: styles.button,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onPress: this._handlePress,\n          title: \"Get image dimensions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this) : null, startLoad ? /*#__PURE__*/_jsxDEV(View, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: [\"Source dimensions:\", ' ', JSON.stringify({\n            width: this.state.width,\n            height: this.state.height\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Image, {\n          source: createUncachedURI(this.props.source.uri),\n          style: styles.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    maxWidth: 300\n  },\n  image: {\n    backgroundColor: '#eee',\n    height: 230,\n    marginTop: 10,\n    width: 320\n  }\n});\n\nconst StaticGetSizeExample = () => /*#__PURE__*/_jsxDEV(ImageGetSizeExample, {\n  source: sources.pjpeg\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 56,\n  columnNumber: 36\n}, this);\n\nexport default StaticGetSizeExample;","map":{"version":3,"sources":["/Users/necolas/OpenSource/github/necolas/react-native-web/packages/examples/shared/ImageExample/examples/StaticGetSize.js"],"names":["createUncachedURI","sources","React","PureComponent","ImageGetSizeExample","showButton","startLoad","width","height","Image","getSize","props","source","uri","setState","render","state","styles","button","_handlePress","JSON","stringify","image","StyleSheet","create","maxWidth","backgroundColor","marginTop","StaticGetSizeExample","pjpeg"],"mappings":";;;;;AAAA,SAASA,iBAAT,QAAkC,YAAlC;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;;;;;;;AAGA,MAAMC,mBAAN,SAAkCD,aAAlC,CAAgD;AAAA;AAAA;;AAAA,mCACtC;AACNE,MAAAA,UAAU,EAAE,IADN;AAENC,MAAAA,SAAS,EAAE,KAFL;AAGNC,MAAAA,KAAK,EAAE,CAHD;AAINC,MAAAA,MAAM,EAAE;AAJF,KADsC;;AAAA,0CA+B/B,MAAM;AACnBC,MAAAA,KAAK,CAACC,OAAN,CAAc,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,GAAhC,EAAqC,CAACN,KAAD,EAAQC,MAAR,KAAmB;AACtD,aAAKM,QAAL,CAAc;AAAER,UAAAA,SAAS,EAAE,IAAb;AAAmBD,UAAAA,UAAU,EAAE,KAA/B;AAAsCE,UAAAA,KAAtC;AAA6CC,UAAAA;AAA7C,SAAd;AACD,OAFD;AAGD,KAnC6C;AAAA;;AAQ9CO,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEV,MAAAA,UAAF;AAAcC,MAAAA;AAAd,QAA4B,KAAKU,KAAvC;AAEA,wBACE,QAAC,IAAD;AAAA,iBACGX,UAAU,gBACT,QAAC,IAAD;AAAM,QAAA,KAAK,EAAEY,MAAM,CAACC,MAApB;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,KAAKC,YAAtB;AAAoC,UAAA,KAAK,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADS,GAIP,IALN,EAMGb,SAAS,gBACR,QAAC,IAAD;AAAA,gCACE,QAAC,IAAD;AAAA,2CACqB,GADrB,EAEGc,IAAI,CAACC,SAAL,CAAe;AAAEd,YAAAA,KAAK,EAAE,KAAKS,KAAL,CAAWT,KAApB;AAA2BC,YAAAA,MAAM,EAAE,KAAKQ,KAAL,CAAWR;AAA9C,WAAf,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE,QAAC,KAAD;AAAO,UAAA,MAAM,EAAER,iBAAiB,CAAC,KAAKW,KAAL,CAAWC,MAAX,CAAkBC,GAAnB,CAAhC;AAAyD,UAAA,KAAK,EAAEI,MAAM,CAACK;AAAvE;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cADQ,GAQN,IAdN;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAkBD;;AA7B6C;;AAsChD,MAAML,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,MAAM,EAAE;AACNO,IAAAA,QAAQ,EAAE;AADJ,GADuB;AAI/BH,EAAAA,KAAK,EAAE;AACLI,IAAAA,eAAe,EAAE,MADZ;AAELlB,IAAAA,MAAM,EAAE,GAFH;AAGLmB,IAAAA,SAAS,EAAE,EAHN;AAILpB,IAAAA,KAAK,EAAE;AAJF;AAJwB,CAAlB,CAAf;;AAYA,MAAMqB,oBAAoB,GAAG,mBAAM,QAAC,mBAAD;AAAqB,EAAA,MAAM,EAAE3B,OAAO,CAAC4B;AAArC;AAAA;AAAA;AAAA;AAAA,QAAnC;;AAEA,eAAeD,oBAAf","sourcesContent":["import { createUncachedURI } from '../helpers';\nimport sources from '../sources';\nimport React, { PureComponent } from 'react';\nimport { Button, Image, StyleSheet, Text, View } from 'react-native';\n\nclass ImageGetSizeExample extends PureComponent {\n  state = {\n    showButton: true,\n    startLoad: false,\n    width: 0,\n    height: 0\n  };\n\n  render() {\n    const { showButton, startLoad } = this.state;\n\n    return (\n      <View>\n        {showButton ? (\n          <View style={styles.button}>\n            <Button onPress={this._handlePress} title=\"Get image dimensions\" />\n          </View>\n        ) : null}\n        {startLoad ? (\n          <View>\n            <Text>\n              Source dimensions:{' '}\n              {JSON.stringify({ width: this.state.width, height: this.state.height })}\n            </Text>\n            <Image source={createUncachedURI(this.props.source.uri)} style={styles.image} />\n          </View>\n        ) : null}\n      </View>\n    );\n  }\n\n  _handlePress = () => {\n    Image.getSize(this.props.source.uri, (width, height) => {\n      this.setState({ startLoad: true, showButton: false, width, height });\n    });\n  };\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    maxWidth: 300\n  },\n  image: {\n    backgroundColor: '#eee',\n    height: 230,\n    marginTop: 10,\n    width: 320\n  }\n});\n\nconst StaticGetSizeExample = () => <ImageGetSizeExample source={sources.pjpeg} />;\n\nexport default StaticGetSizeExample;\n"]},"metadata":{},"sourceType":"module"}