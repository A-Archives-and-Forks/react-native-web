{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nimport PanResponder from \"react-native-web/dist/cjs/exports/PanResponder\";\nimport StyleSheet from \"react-native-web/dist/cjs/exports/StyleSheet\";\nimport View from \"react-native-web/dist/cjs/exports/View\";\nconst CIRCLE_SIZE = 80;\nexport default class DraggableCircle extends PureComponent {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"_panResponder\", {});\n\n    _defineProperty(this, \"_previousLeft\", 0);\n\n    _defineProperty(this, \"_previousTop\", 0);\n\n    _defineProperty(this, \"_circleStyles\", {});\n\n    _defineProperty(this, \"circle\", null);\n\n    _defineProperty(this, \"_setCircleRef\", circle => {\n      this.circle = circle;\n    });\n\n    _defineProperty(this, \"_handleStartShouldSetPanResponder\", (e, gestureState) => {\n      // Should we become active when the user presses down on the circle?\n      return true;\n    });\n\n    _defineProperty(this, \"_handleMoveShouldSetPanResponder\", (e, gestureState) => {\n      // Should we become active when the user moves a touch over the circle?\n      return true;\n    });\n\n    _defineProperty(this, \"_handlePanResponderGrant\", (e, gestureState) => {\n      this._highlight();\n    });\n\n    _defineProperty(this, \"_handlePanResponderMove\", (e, gestureState) => {\n      this._circleStyles.style.left = this._previousLeft + gestureState.dx;\n      this._circleStyles.style.top = this._previousTop + gestureState.dy;\n\n      this._updateNativeStyles();\n    });\n\n    _defineProperty(this, \"_handlePanResponderEnd\", (e, gestureState) => {\n      this._unHighlight();\n\n      this._previousLeft += gestureState.dx;\n      this._previousTop += gestureState.dy;\n    });\n\n    this._panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: this._handleStartShouldSetPanResponder,\n      onMoveShouldSetPanResponder: this._handleMoveShouldSetPanResponder,\n      onPanResponderGrant: this._handlePanResponderGrant,\n      onPanResponderMove: this._handlePanResponderMove,\n      onPanResponderRelease: this._handlePanResponderEnd,\n      onPanResponderTerminate: this._handlePanResponderEnd\n    });\n    this._previousLeft = 20;\n    this._previousTop = 84;\n    this._circleStyles = {\n      style: {\n        left: this._previousLeft,\n        top: this._previousTop,\n        backgroundColor: 'green'\n      }\n    };\n  }\n\n  componentDidMount() {\n    this._updateNativeStyles();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsx(View, {\n      style: styles.container,\n      children: /*#__PURE__*/_jsx(View, _objectSpread({\n        ref: this._setCircleRef,\n        style: styles.circle\n      }, this._panResponder.panHandlers))\n    });\n  }\n\n  _highlight() {\n    this._circleStyles.style.backgroundColor = 'blue';\n\n    this._updateNativeStyles();\n  }\n\n  _unHighlight() {\n    this._circleStyles.style.backgroundColor = 'green';\n\n    this._updateNativeStyles();\n  }\n\n  _updateNativeStyles() {\n    this.circle && this.circle.setNativeProps(this._circleStyles);\n  }\n\n}\nconst styles = StyleSheet.create({\n  circle: {\n    width: CIRCLE_SIZE,\n    height: CIRCLE_SIZE,\n    borderRadius: CIRCLE_SIZE / 2,\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    touchAction: 'none'\n  },\n  container: {\n    flex: 1,\n    minHeight: 400,\n    paddingTop: 64\n  }\n});","map":null,"metadata":{},"sourceType":"module"}