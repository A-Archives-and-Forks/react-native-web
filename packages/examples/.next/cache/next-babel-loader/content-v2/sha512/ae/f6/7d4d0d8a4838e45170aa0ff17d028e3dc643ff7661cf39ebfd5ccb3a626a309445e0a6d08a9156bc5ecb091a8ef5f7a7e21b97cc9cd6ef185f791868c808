{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/necolas/OpenSource/github/necolas/react-native-web/packages/examples/pages/text-input/examples/Multiline.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { styles } from '../helpers';\nimport TextInput from \"react-native-web/dist/cjs/exports/TextInput\";\nimport View from \"react-native-web/dist/cjs/exports/View\";\nvar MIN_HEIGHT = 24;\n\nfunction Autogrow() {\n  _s();\n\n  var _useState = useState(MIN_HEIGHT),\n      height = _useState[0],\n      setHeight = _useState[1];\n\n  var _useState2 = useState(''),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  function onContentSizeChange(e) {\n    var height = e.nativeEvent.contentSize.height;\n    setHeight(Math.max(MIN_HEIGHT, height));\n  }\n\n  function onChangeText(text) {\n    setValue(text);\n  }\n\n  return /*#__PURE__*/_jsxDEV(View, {\n    children: /*#__PURE__*/_jsxDEV(TextInput, {\n      multiline: true,\n      onChangeText: onChangeText,\n      onContentSizeChange: onContentSizeChange,\n      style: [styles.multiline, {\n        height: height\n      }],\n      value: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Autogrow, \"MTfTux8fDW+maKsGXIYRQZlyZzc=\");\n\n_c = Autogrow;\nexport default function Multiline() {\n  return /*#__PURE__*/_jsxDEV(View, {\n    children: [/*#__PURE__*/_jsxDEV(TextInput, {\n      multiline: true,\n      style: styles.multiline\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Autogrow, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Multiline;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Autogrow\");\n$RefreshReg$(_c2, \"Multiline\");","map":{"version":3,"sources":["/Users/necolas/OpenSource/github/necolas/react-native-web/packages/examples/pages/text-input/examples/Multiline.js"],"names":["React","useState","styles","MIN_HEIGHT","Autogrow","height","setHeight","value","setValue","onContentSizeChange","e","nativeEvent","contentSize","Math","max","onChangeText","text","multiline","Multiline"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,YAAvB;;;AAGA,IAAMC,UAAU,GAAG,EAAnB;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAAA,kBACUH,QAAQ,CAACE,UAAD,CADlB;AAAA,MACXE,MADW;AAAA,MACHC,SADG;;AAAA,mBAEQL,QAAQ,CAAC,EAAD,CAFhB;AAAA,MAEXM,KAFW;AAAA,MAEJC,QAFI;;AAIlB,WAASC,mBAAT,CAA6BC,CAA7B,EAAgC;AAAA,QACtBL,MADsB,GACXK,CAAC,CAACC,WAAF,CAAcC,WADH,CACtBP,MADsB;AAE9BC,IAAAA,SAAS,CAACO,IAAI,CAACC,GAAL,CAASX,UAAT,EAAqBE,MAArB,CAAD,CAAT;AACD;;AAED,WAASU,YAAT,CAAsBC,IAAtB,EAA4B;AAC1BR,IAAAA,QAAQ,CAACQ,IAAD,CAAR;AACD;;AAED,sBACE,QAAC,IAAD;AAAA,2BACE,QAAC,SAAD;AACE,MAAA,SAAS,EAAE,IADb;AAEE,MAAA,YAAY,EAAED,YAFhB;AAGE,MAAA,mBAAmB,EAAEN,mBAHvB;AAIE,MAAA,KAAK,EAAE,CAACP,MAAM,CAACe,SAAR,EAAmB;AAAEZ,QAAAA,MAAM,EAANA;AAAF,OAAnB,CAJT;AAKE,MAAA,KAAK,EAAEE;AALT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAxBQH,Q;;KAAAA,Q;AA0BT,eAAe,SAASc,SAAT,GAAqB;AAClC,sBACE,QAAC,IAAD;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAE,IAAtB;AAA4B,MAAA,KAAK,EAAEhB,MAAM,CAACe;AAA1C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;MAPuBC,S","sourcesContent":["import React, { useState } from 'react';\nimport { styles } from '../helpers';\nimport { TextInput, View } from 'react-native';\n\nconst MIN_HEIGHT = 24;\n\nfunction Autogrow() {\n  const [height, setHeight] = useState(MIN_HEIGHT);\n  const [value, setValue] = useState('');\n\n  function onContentSizeChange(e) {\n    const { height } = e.nativeEvent.contentSize;\n    setHeight(Math.max(MIN_HEIGHT, height));\n  }\n\n  function onChangeText(text) {\n    setValue(text);\n  }\n\n  return (\n    <View>\n      <TextInput\n        multiline={true}\n        onChangeText={onChangeText}\n        onContentSizeChange={onContentSizeChange}\n        style={[styles.multiline, { height }]}\n        value={value}\n      />\n    </View>\n  );\n}\n\nexport default function Multiline() {\n  return (\n    <View>\n      <TextInput multiline={true} style={styles.multiline} />\n      <Autogrow />\n    </View>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}