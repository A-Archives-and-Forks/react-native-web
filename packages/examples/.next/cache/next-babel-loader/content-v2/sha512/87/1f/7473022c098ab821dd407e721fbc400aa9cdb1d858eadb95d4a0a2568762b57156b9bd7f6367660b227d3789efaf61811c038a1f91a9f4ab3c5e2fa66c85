{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/necolas/OpenSource/github/necolas/react-native-web/packages/examples/pages/pressable/examples/PanAndPress.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useRef, useState } from 'react';\nimport Animated from \"react-native-web/dist/cjs/exports/Animated\";\nimport View from \"react-native-web/dist/cjs/exports/View\";\nimport StyleSheet from \"react-native-web/dist/cjs/exports/StyleSheet\";\nimport PanResponder from \"react-native-web/dist/cjs/exports/PanResponder\";\nimport Text from \"react-native-web/dist/cjs/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/cjs/exports/TouchableOpacity\";\n\nconst App = () => {\n  const pan = useRef(new Animated.ValueXY()).current;\n  const {\n    0: x,\n    1: setX\n  } = useState(0);\n  const panResponder = useRef(null);\n\n  if (panResponder.current == null) {\n    panResponder.current = PanResponder.create({\n      onMoveShouldSetPanResponder: () => true,\n      onPanResponderGrant: e => {\n        console.log('pan grant');\n        pan.setOffset({\n          x: pan.x._value,\n          y: pan.y._value\n        });\n      },\n      onPanResponderMove: Animated.event([null, {\n        dx: pan.x,\n        dy: pan.y\n      }]),\n      onPanResponderRelease: () => {\n        console.log('pan release');\n        pan.flattenOffset();\n      },\n\n      onPanResponderTerminate() {\n        console.log('pan terminate');\n        pan.flattenOffset();\n      }\n\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(View, {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      style: styles.titleText,\n      children: [\"Pressed: \", x]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Animated.View, _objectSpread(_objectSpread({\n      style: {\n        transform: [{\n          translateX: pan.x\n        }, {\n          translateY: pan.y\n        }]\n      }\n    }, panResponder.current.panHandlers), {}, {\n      children: /*#__PURE__*/_jsxDEV(View, {\n        style: styles.box,\n        children: /*#__PURE__*/_jsxDEV(TouchableOpacity, {\n          onPress: () => setX(x + 1),\n          style: styles.outerTouchable,\n          children: [/*#__PURE__*/_jsxDEV(TouchableOpacity, {\n            onPress: () => {\n              console.log('press inner');\n            },\n            style: styles.innerTouchable\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TouchableOpacity, {\n            disabled: true,\n            style: styles.innerTouchable\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TouchableOpacity, {\n            accessibilityRole: \"button\",\n            disabled: true,\n            style: [styles.innerTouchable, styles.disabledButton]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    userSelect: 'none'\n  },\n  titleText: {\n    fontSize: 14,\n    lineHeight: 24,\n    fontWeight: 'bold'\n  },\n  box: {\n    height: 200,\n    width: 150,\n    backgroundColor: 'lightblue',\n    borderRadius: 5\n  },\n  outerTouchable: {\n    height: 150,\n    width: 100,\n    margin: 25,\n    backgroundColor: 'blue',\n    borderRadius: 5,\n    justifyContent: 'center'\n  },\n  innerTouchable: {\n    height: 20,\n    flex: 1,\n    marginVertical: 10,\n    marginHorizontal: 20,\n    backgroundColor: 'green',\n    borderRadius: 5\n  },\n  disabledButton: {\n    backgroundColor: 'red'\n  }\n});\nexport default App;","map":{"version":3,"sources":["/Users/necolas/OpenSource/github/necolas/react-native-web/packages/examples/pages/pressable/examples/PanAndPress.js"],"names":["React","useRef","useState","App","pan","Animated","ValueXY","current","x","setX","panResponder","PanResponder","create","onMoveShouldSetPanResponder","onPanResponderGrant","e","console","log","setOffset","_value","y","onPanResponderMove","event","dx","dy","onPanResponderRelease","flattenOffset","onPanResponderTerminate","styles","container","titleText","transform","translateX","translateY","panHandlers","box","outerTouchable","innerTouchable","disabledButton","StyleSheet","flex","alignItems","justifyContent","userSelect","fontSize","lineHeight","fontWeight","height","width","backgroundColor","borderRadius","margin","marginVertical","marginHorizontal"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\nimport { Animated, View, StyleSheet, PanResponder, Text, TouchableOpacity } from 'react-native';\n\nconst App = () => {\n  const pan = useRef(new Animated.ValueXY()).current;\n  const [x, setX] = useState(0);\n\n  const panResponder = useRef(null);\n  if (panResponder.current == null) {\n    panResponder.current = PanResponder.create({\n      onMoveShouldSetPanResponder: () => true,\n      onPanResponderGrant: e => {\n        console.log('pan grant');\n        pan.setOffset({\n          x: pan.x._value,\n          y: pan.y._value\n        });\n      },\n      onPanResponderMove: Animated.event([null, { dx: pan.x, dy: pan.y }]),\n      onPanResponderRelease: () => {\n        console.log('pan release');\n        pan.flattenOffset();\n      },\n      onPanResponderTerminate() {\n        console.log('pan terminate');\n        pan.flattenOffset();\n      }\n    });\n  }\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.titleText}>Pressed: {x}</Text>\n      <Animated.View\n        style={{\n          transform: [{ translateX: pan.x }, { translateY: pan.y }]\n        }}\n        {...panResponder.current.panHandlers}\n      >\n        <View style={styles.box}>\n          <TouchableOpacity onPress={() => setX(x + 1)} style={styles.outerTouchable}>\n            <TouchableOpacity\n              onPress={() => {\n                console.log('press inner');\n              }}\n              style={styles.innerTouchable}\n            />\n            <TouchableOpacity disabled style={styles.innerTouchable} />\n            <TouchableOpacity\n              accessibilityRole=\"button\"\n              disabled\n              style={[styles.innerTouchable, styles.disabledButton]}\n            />\n          </TouchableOpacity>\n        </View>\n      </Animated.View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    userSelect: 'none'\n  },\n  titleText: {\n    fontSize: 14,\n    lineHeight: 24,\n    fontWeight: 'bold'\n  },\n  box: {\n    height: 200,\n    width: 150,\n    backgroundColor: 'lightblue',\n    borderRadius: 5\n  },\n  outerTouchable: {\n    height: 150,\n    width: 100,\n    margin: 25,\n    backgroundColor: 'blue',\n    borderRadius: 5,\n    justifyContent: 'center'\n  },\n  innerTouchable: {\n    height: 20,\n    flex: 1,\n    marginVertical: 10,\n    marginHorizontal: 20,\n    backgroundColor: 'green',\n    borderRadius: 5\n  },\n  disabledButton: {\n    backgroundColor: 'red'\n  }\n});\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}