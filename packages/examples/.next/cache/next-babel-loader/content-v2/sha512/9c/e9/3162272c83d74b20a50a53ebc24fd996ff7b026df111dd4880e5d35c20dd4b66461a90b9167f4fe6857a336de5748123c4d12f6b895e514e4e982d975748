{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nimport Switch from \"react-native-web/dist/cjs/exports/Switch\";\nimport View from \"react-native-web/dist/cjs/exports/View\";\n\nclass CustomSizeExample extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      firstIsOn: true,\n      secondIsOn: false\n    });\n\n    _defineProperty(this, \"_handleFirst\", value => {\n      this.setState({\n        firstIsOn: value\n      });\n    });\n\n    _defineProperty(this, \"_handleSecond\", value => {\n      this.setState({\n        secondIsOn: value\n      });\n    });\n  }\n\n  render() {\n    const {\n      firstIsOn,\n      secondIsOn\n    } = this.state;\n    return /*#__PURE__*/_jsxs(View, {\n      children: [/*#__PURE__*/_jsx(Switch, {\n        onValueChange: this._handleFirst,\n        style: {\n          marginBottom: 10,\n          height: 30\n        },\n        value: firstIsOn\n      }), /*#__PURE__*/_jsx(Switch, {\n        onValueChange: this._handleSecond,\n        style: {\n          height: 30,\n          width: 150\n        },\n        value: secondIsOn\n      })]\n    });\n  }\n\n}\n\nexport default function CustomSize() {\n  return /*#__PURE__*/_jsx(CustomSizeExample, {});\n}","map":null,"metadata":{},"sourceType":"module"}