{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/necolas/OpenSource/github/necolas/react-native-web/packages/examples/pages/dimensions/index.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Button from \"react-native-web/dist/cjs/exports/Button\";\nimport Dimensions from \"react-native-web/dist/cjs/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/cjs/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/cjs/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/cjs/exports/Text\";\nimport View from \"react-native-web/dist/cjs/exports/View\";\nimport React from 'react';\n\nclass DimensionsExample extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      listened: false,\n      logs: []\n    });\n\n    _defineProperty(this, \"toggle\", () => {\n      const {\n        listened\n      } = this.state;\n\n      if (listened) {\n        Dimensions.removeEventListener('change', this._handleChange);\n\n        this._log('Removed listener');\n      } else {\n        Dimensions.addEventListener('change', this._handleChange);\n\n        this._log('Added listener');\n      }\n\n      this.setState(() => ({\n        listened: !listened\n      }));\n    });\n\n    _defineProperty(this, \"_handleChange\", ({\n      window,\n      screen\n    }) => {\n      window = JSON.stringify(window, null, 2);\n      screen = JSON.stringify(screen, null, 2);\n\n      this._log(`Changed\\nwindow = ${window}\\nscreen = ${screen}`);\n    });\n\n    _defineProperty(this, \"_log\", msg => {\n      this.setState(state => ({\n        logs: [`${new Date().toTimeString()} - ${msg}`, ...state.logs]\n      }));\n    });\n  }\n\n  componentWillUnmount() {\n    Dimensions.removeEventListener('change', this._handleChange);\n  }\n\n  render() {\n    const {\n      logs,\n      listened\n    } = this.state;\n    const buttonTitle = listened ? 'Remove dimensions listener' : 'Add dimensions listener';\n    return /*#__PURE__*/_jsxDEV(View, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onPress: this.toggle,\n        title: buttonTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ScrollView, {\n        style: styles.logs,\n        children: logs.map((log, i) => /*#__PURE__*/_jsxDEV(Text, {\n          style: styles.log,\n          children: log\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default function DimensionsPage() {\n  return /*#__PURE__*/_jsxDEV(DimensionsExample, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 10\n  }, this);\n}\nconst styles = StyleSheet.create({\n  logs: {\n    maxHeight: 256\n  },\n  log: {\n    fontFamily: 'monospace, monospace',\n    marginTop: 8,\n    marginBottom: 8\n  }\n});","map":{"version":3,"sources":["/Users/necolas/OpenSource/github/necolas/react-native-web/packages/examples/pages/dimensions/index.js"],"names":["React","DimensionsExample","Component","listened","logs","state","Dimensions","removeEventListener","_handleChange","_log","addEventListener","setState","window","screen","JSON","stringify","msg","Date","toTimeString","componentWillUnmount","render","buttonTitle","toggle","styles","map","log","i","DimensionsPage","StyleSheet","create","maxHeight","fontFamily","marginTop","marginBottom"],"mappings":";;;;;;;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,iBAAN,SAAgCD,KAAK,CAACE,SAAtC,CAAgD;AAAA;AAAA;;AAAA,mCACtC;AACNC,MAAAA,QAAQ,EAAE,KADJ;AAENC,MAAAA,IAAI,EAAE;AAFA,KADsC;;AAAA,oCA2BrC,MAAM;AACb,YAAM;AAAED,QAAAA;AAAF,UAAe,KAAKE,KAA1B;;AACA,UAAIF,QAAJ,EAAc;AACZG,QAAAA,UAAU,CAACC,mBAAX,CAA+B,QAA/B,EAAyC,KAAKC,aAA9C;;AACA,aAAKC,IAAL,CAAU,kBAAV;AACD,OAHD,MAGO;AACLH,QAAAA,UAAU,CAACI,gBAAX,CAA4B,QAA5B,EAAsC,KAAKF,aAA3C;;AACA,aAAKC,IAAL,CAAU,gBAAV;AACD;;AACD,WAAKE,QAAL,CAAc,OAAO;AAAER,QAAAA,QAAQ,EAAE,CAACA;AAAb,OAAP,CAAd;AACD,KArC6C;;AAAA,2CAuC9B,CAAC;AAAES,MAAAA,MAAF;AAAUC,MAAAA;AAAV,KAAD,KAAwB;AACtCD,MAAAA,MAAM,GAAGE,IAAI,CAACC,SAAL,CAAeH,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAT;AACAC,MAAAA,MAAM,GAAGC,IAAI,CAACC,SAAL,CAAeF,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAT;;AACA,WAAKJ,IAAL,CAAW,qBAAoBG,MAAO,cAAaC,MAAO,EAA1D;AACD,KA3C6C;;AAAA,kCA6CvCG,GAAG,IAAI;AACZ,WAAKL,QAAL,CAAcN,KAAK,KAAK;AACtBD,QAAAA,IAAI,EAAE,CAAE,GAAE,IAAIa,IAAJ,GAAWC,YAAX,EAA0B,MAAKF,GAAI,EAAvC,EAA0C,GAAGX,KAAK,CAACD,IAAnD;AADgB,OAAL,CAAnB;AAGD,KAjD6C;AAAA;;AAM9Ce,EAAAA,oBAAoB,GAAG;AACrBb,IAAAA,UAAU,CAACC,mBAAX,CAA+B,QAA/B,EAAyC,KAAKC,aAA9C;AACD;;AAEDY,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEhB,MAAAA,IAAF;AAAQD,MAAAA;AAAR,QAAqB,KAAKE,KAAhC;AACA,UAAMgB,WAAW,GAAGlB,QAAQ,GAAG,4BAAH,GAAkC,yBAA9D;AACA,wBACE,QAAC,IAAD;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKmB,MAAtB;AAA8B,QAAA,KAAK,EAAED;AAArC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,UAAD;AAAY,QAAA,KAAK,EAAEE,MAAM,CAACnB,IAA1B;AAAA,kBACGA,IAAI,CAACoB,GAAL,CAAS,CAACC,GAAD,EAAMC,CAAN,kBACR,QAAC,IAAD;AAAc,UAAA,KAAK,EAAEH,MAAM,CAACE,GAA5B;AAAA,oBACGA;AADH,WAAWC,CAAX;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AAzB6C;;AAoDhD,eAAe,SAASC,cAAT,GAA0B;AACvC,sBAAO,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AAED,MAAMJ,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BzB,EAAAA,IAAI,EAAE;AACJ0B,IAAAA,SAAS,EAAE;AADP,GADyB;AAI/BL,EAAAA,GAAG,EAAE;AACHM,IAAAA,UAAU,EAAE,sBADT;AAEHC,IAAAA,SAAS,EAAE,CAFR;AAGHC,IAAAA,YAAY,EAAE;AAHX;AAJ0B,CAAlB,CAAf","sourcesContent":["import { Button, Dimensions, ScrollView, StyleSheet, Text, View } from 'react-native';\nimport React from 'react';\n\nclass DimensionsExample extends React.Component {\n  state = {\n    listened: false,\n    logs: []\n  };\n\n  componentWillUnmount() {\n    Dimensions.removeEventListener('change', this._handleChange);\n  }\n\n  render() {\n    const { logs, listened } = this.state;\n    const buttonTitle = listened ? 'Remove dimensions listener' : 'Add dimensions listener';\n    return (\n      <View>\n        <Button onPress={this.toggle} title={buttonTitle} />\n        <ScrollView style={styles.logs}>\n          {logs.map((log, i) => (\n            <Text key={i} style={styles.log}>\n              {log}\n            </Text>\n          ))}\n        </ScrollView>\n      </View>\n    );\n  }\n\n  toggle = () => {\n    const { listened } = this.state;\n    if (listened) {\n      Dimensions.removeEventListener('change', this._handleChange);\n      this._log('Removed listener');\n    } else {\n      Dimensions.addEventListener('change', this._handleChange);\n      this._log('Added listener');\n    }\n    this.setState(() => ({ listened: !listened }));\n  };\n\n  _handleChange = ({ window, screen }) => {\n    window = JSON.stringify(window, null, 2);\n    screen = JSON.stringify(screen, null, 2);\n    this._log(`Changed\\nwindow = ${window}\\nscreen = ${screen}`);\n  };\n\n  _log = msg => {\n    this.setState(state => ({\n      logs: [`${new Date().toTimeString()} - ${msg}`, ...state.logs]\n    }));\n  };\n}\n\nexport default function DimensionsPage() {\n  return <DimensionsExample />;\n}\n\nconst styles = StyleSheet.create({\n  logs: {\n    maxHeight: 256\n  },\n  log: {\n    fontFamily: 'monospace, monospace',\n    marginTop: 8,\n    marginBottom: 8\n  }\n});\n"]},"metadata":{},"sourceType":"module"}