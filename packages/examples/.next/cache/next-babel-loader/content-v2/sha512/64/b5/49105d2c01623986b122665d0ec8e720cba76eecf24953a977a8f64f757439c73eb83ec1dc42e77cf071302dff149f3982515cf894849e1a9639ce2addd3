{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport AppState from \"react-native-web/dist/cjs/exports/AppState\";\nimport Text from \"react-native-web/dist/cjs/exports/Text\";\nimport View from \"react-native-web/dist/cjs/exports/View\";\nexport default function AppStatePage() {\n  var _React$useState = React.useState({\n    active: 0,\n    background: 0,\n    currentState: AppState.currentState\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      updateState = _React$useState2[1];\n\n  React.useEffect(function () {\n    var handleChange = function handleChange(nextState) {\n      updateState(function (previousState) {\n        return _objectSpread(_objectSpread({}, previousState), {}, _defineProperty({}, nextState, previousState[nextState] + 1));\n      });\n    };\n\n    AppState.addEventListener('change', handleChange);\n    return function () {\n      AppState.removeEventListener('change', handleChange);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxs(View, {\n    children: [/*#__PURE__*/_jsxs(Text, {\n      children: [\"Active count: \", state.active]\n    }), /*#__PURE__*/_jsxs(Text, {\n      children: [\"Background count: \", state.background]\n    }), /*#__PURE__*/_jsxs(Text, {\n      children: [\"Current state is: \", state.currentState]\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}