{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/cjs/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/cjs/exports/Text\";\nimport View from \"react-native-web/dist/cjs/exports/View\";\nvar l1 = {\n  width: '100%',\n  paddingLeft: 0,\n  paddingTop: 0\n};\nvar l2 = {\n  width: '75%',\n  paddingLeft: 10,\n  paddingTop: 10\n};\n\nvar OnLayoutExample = /*#__PURE__*/function (_React$Component) {\n  _inherits(OnLayoutExample, _React$Component);\n\n  var _super = _createSuper(OnLayoutExample);\n\n  function OnLayoutExample() {\n    var _this;\n\n    _classCallCheck(this, OnLayoutExample);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      layoutInfo: {}\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleLayout\", function (_ref) {\n      var nativeEvent = _ref.nativeEvent;\n\n      _this.setState(function () {\n        return {\n          layoutInfo: nativeEvent.layout\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (component) {\n      _this._ref = component;\n    });\n\n    return _this;\n  }\n\n  _createClass(OnLayoutExample, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this._layout = l1;\n      this._interval = setInterval(function () {\n        if (_this2._ref) {\n          _this2._ref.setNativeProps({\n            style: _this2._layout\n          });\n\n          _this2._layout = _this2._layout.width === '100%' ? l2 : l1;\n        }\n      }, 2000);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this._interval);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state$layoutInf = this.state.layoutInfo,\n          x = _this$state$layoutInf.x,\n          y = _this$state$layoutInf.y,\n          width = _this$state$layoutInf.width,\n          height = _this$state$layoutInf.height;\n      return /*#__PURE__*/_jsxs(View, {\n        style: styles.root,\n        children: [/*#__PURE__*/_jsxs(View, {\n          style: styles.left,\n          children: [/*#__PURE__*/_jsxs(Text, {\n            children: [\"x: \", x]\n          }), /*#__PURE__*/_jsxs(Text, {\n            children: [\"y: \", y]\n          }), /*#__PURE__*/_jsxs(Text, {\n            children: [\"width: \", width]\n          }), /*#__PURE__*/_jsxs(Text, {\n            children: [\"height: \", height]\n          })]\n        }), /*#__PURE__*/_jsx(View, {\n          style: styles.right,\n          children: /*#__PURE__*/_jsx(View, {\n            ref: this._setRef,\n            style: styles.container,\n            children: /*#__PURE__*/_jsx(View, {\n              onLayout: this._handleLayout,\n              style: styles.box\n            })\n          })\n        })]\n      });\n    }\n  }]);\n\n  return OnLayoutExample;\n}(React.Component);\n\nexport default function OnLayout() {\n  return /*#__PURE__*/_jsx(OnLayoutExample, {});\n}\nvar styles = StyleSheet.create({\n  root: {\n    flexDirection: 'row'\n  },\n  container: {\n    height: 50\n  },\n  left: {\n    width: 100\n  },\n  right: {\n    flex: 1\n  },\n  box: {\n    backgroundColor: '#eee',\n    flex: 1\n  }\n});","map":null,"metadata":{},"sourceType":"module"}