{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/necolas/OpenSource/github/necolas/react-native-web/packages/examples/pages/modal/examples/Modalception.js\";\nimport React, { useState, useMemo } from 'react';\nimport Modal from \"react-native-web/dist/cjs/exports/Modal\";\nimport View from \"react-native-web/dist/cjs/exports/View\";\nimport Text from \"react-native-web/dist/cjs/exports/Text\";\nimport Button from \"react-native-web/dist/cjs/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/cjs/exports/StyleSheet\";\nconst WIGGLE_ROOM = 128;\n\nfunction Gap() {\n  return /*#__PURE__*/_jsxDEV(View, {\n    style: styles.gap\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 10\n  }, this);\n}\n\nexport default function Modalception({\n  depth = 1\n}) {\n  const {\n    0: isVisible,\n    1: setIsVisible\n  } = useState(false);\n  const offset = useMemo(() => {\n    return {\n      top: Math.random() * WIGGLE_ROOM - WIGGLE_ROOM / 2,\n      left: Math.random() * WIGGLE_ROOM - WIGGLE_ROOM / 2\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onPress: () => setIsVisible(true),\n      title: 'Open modals'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      onRequestClose: () => setIsVisible(false),\n      transparent: true,\n      visible: isVisible,\n      children: /*#__PURE__*/_jsxDEV(View, {\n        style: [styles.container, offset],\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: [\"This is in Modal \", depth]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Gap, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), isVisible ? /*#__PURE__*/_jsxDEV(Modalception, {\n          depth: depth + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 24\n        }, this) : null, /*#__PURE__*/_jsxDEV(Gap, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"red\",\n          onPress: () => setIsVisible(false),\n          title: 'Close'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    backgroundColor: 'white',\n    borderColor: '#eee',\n    borderRadius: 10,\n    borderWidth: 1,\n    justifyContent: 'center',\n    height: 300,\n    margin: 'auto',\n    padding: 30,\n    width: 300\n  },\n  gap: {\n    height: 10\n  }\n});","map":{"version":3,"sources":["/Users/necolas/OpenSource/github/necolas/react-native-web/packages/examples/pages/modal/examples/Modalception.js"],"names":["React","useState","useMemo","WIGGLE_ROOM","Gap","styles","gap","Modalception","depth","isVisible","setIsVisible","offset","top","Math","random","left","container","StyleSheet","create","alignItems","backgroundColor","borderColor","borderRadius","borderWidth","justifyContent","height","margin","padding","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,OAA1B,QAAyC,OAAzC;;;;;;AAGA,MAAMC,WAAW,GAAG,GAApB;;AAEA,SAASC,GAAT,GAAe;AACb,sBAAO,QAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC;AAApB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAED,eAAe,SAASC,YAAT,CAAsB;AAAEC,EAAAA,KAAK,GAAG;AAAV,CAAtB,EAAqC;AAClD,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BT,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAMU,MAAM,GAAGT,OAAO,CAAC,MAAM;AAC3B,WAAO;AACLU,MAAAA,GAAG,EAAEC,IAAI,CAACC,MAAL,KAAgBX,WAAhB,GAA8BA,WAAW,GAAG,CAD5C;AAELY,MAAAA,IAAI,EAAEF,IAAI,CAACC,MAAL,KAAgBX,WAAhB,GAA8BA,WAAW,GAAG;AAF7C,KAAP;AAID,GALqB,EAKnB,EALmB,CAAtB;AAOA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAMO,YAAY,CAAC,IAAD,CAAnC;AAA2C,MAAA,KAAK,EAAE;AAAlD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,cAAc,EAAE,MAAMA,YAAY,CAAC,KAAD,CAAzC;AAAkD,MAAA,WAAW,MAA7D;AAA8D,MAAA,OAAO,EAAED,SAAvE;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACJ,MAAM,CAACW,SAAR,EAAmBL,MAAnB,CAAb;AAAA,gCACE,QAAC,IAAD;AAAA,0CAAwBH,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGGC,SAAS,gBAAG,QAAC,YAAD;AAAc,UAAA,KAAK,EAAED,KAAK,GAAG;AAA7B;AAAA;AAAA;AAAA;AAAA,gBAAH,GAAwC,IAHpD,eAIE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,KAAd;AAAoB,UAAA,OAAO,EAAE,MAAME,YAAY,CAAC,KAAD,CAA/C;AAAwD,UAAA,KAAK,EAAE;AAA/D;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAcD;AAED,MAAML,MAAM,GAAGY,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,UAAU,EAAE,QADH;AAETC,IAAAA,eAAe,EAAE,OAFR;AAGTC,IAAAA,WAAW,EAAE,MAHJ;AAITC,IAAAA,YAAY,EAAE,EAJL;AAKTC,IAAAA,WAAW,EAAE,CALJ;AAMTC,IAAAA,cAAc,EAAE,QANP;AAOTC,IAAAA,MAAM,EAAE,GAPC;AAQTC,IAAAA,MAAM,EAAE,MARC;AASTC,IAAAA,OAAO,EAAE,EATA;AAUTC,IAAAA,KAAK,EAAE;AAVE,GADoB;AAa/BtB,EAAAA,GAAG,EAAE;AACHmB,IAAAA,MAAM,EAAE;AADL;AAb0B,CAAlB,CAAf","sourcesContent":["import React, { useState, useMemo } from 'react';\nimport { Modal, View, Text, Button, StyleSheet } from 'react-native';\n\nconst WIGGLE_ROOM = 128;\n\nfunction Gap() {\n  return <View style={styles.gap} />;\n}\n\nexport default function Modalception({ depth = 1 }) {\n  const [isVisible, setIsVisible] = useState(false);\n\n  const offset = useMemo(() => {\n    return {\n      top: Math.random() * WIGGLE_ROOM - WIGGLE_ROOM / 2,\n      left: Math.random() * WIGGLE_ROOM - WIGGLE_ROOM / 2\n    };\n  }, []);\n\n  return (\n    <>\n      <Button onPress={() => setIsVisible(true)} title={'Open modals'} />\n      <Modal onRequestClose={() => setIsVisible(false)} transparent visible={isVisible}>\n        <View style={[styles.container, offset]}>\n          <Text>This is in Modal {depth}</Text>\n          <Gap />\n          {isVisible ? <Modalception depth={depth + 1} /> : null}\n          <Gap />\n          <Button color=\"red\" onPress={() => setIsVisible(false)} title={'Close'} />\n        </View>\n      </Modal>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    backgroundColor: 'white',\n    borderColor: '#eee',\n    borderRadius: 10,\n    borderWidth: 1,\n    justifyContent: 'center',\n    height: 300,\n    margin: 'auto',\n    padding: 30,\n    width: 300\n  },\n  gap: {\n    height: 10\n  }\n});\n"]},"metadata":{},"sourceType":"module"}