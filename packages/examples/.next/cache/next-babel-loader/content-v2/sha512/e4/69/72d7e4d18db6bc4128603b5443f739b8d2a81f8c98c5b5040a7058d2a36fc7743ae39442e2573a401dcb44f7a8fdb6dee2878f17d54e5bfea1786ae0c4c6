{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nimport PanResponder from \"react-native-web/dist/cjs/exports/PanResponder\";\nimport StyleSheet from \"react-native-web/dist/cjs/exports/StyleSheet\";\nimport View from \"react-native-web/dist/cjs/exports/View\";\nvar CIRCLE_SIZE = 80;\n\nvar DraggableCircle = /*#__PURE__*/function (_PureComponent) {\n  _inherits(DraggableCircle, _PureComponent);\n\n  var _super = _createSuper(DraggableCircle);\n\n  function DraggableCircle() {\n    var _this;\n\n    _classCallCheck(this, DraggableCircle);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"_panResponder\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_previousLeft\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_previousTop\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_circleStyles\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"circle\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_setCircleRef\", function (circle) {\n      _this.circle = circle;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleStartShouldSetPanResponder\", function (e, gestureState) {\n      // Should we become active when the user presses down on the circle?\n      return true;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleMoveShouldSetPanResponder\", function (e, gestureState) {\n      // Should we become active when the user moves a touch over the circle?\n      return true;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handlePanResponderGrant\", function (e, gestureState) {\n      _this._highlight();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handlePanResponderMove\", function (e, gestureState) {\n      _this._circleStyles.style.left = _this._previousLeft + gestureState.dx;\n      _this._circleStyles.style.top = _this._previousTop + gestureState.dy;\n\n      _this._updateNativeStyles();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handlePanResponderEnd\", function (e, gestureState) {\n      _this._unHighlight();\n\n      _this._previousLeft += gestureState.dx;\n      _this._previousTop += gestureState.dy;\n    });\n\n    _this._panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: _this._handleStartShouldSetPanResponder,\n      onMoveShouldSetPanResponder: _this._handleMoveShouldSetPanResponder,\n      onPanResponderGrant: _this._handlePanResponderGrant,\n      onPanResponderMove: _this._handlePanResponderMove,\n      onPanResponderRelease: _this._handlePanResponderEnd,\n      onPanResponderTerminate: _this._handlePanResponderEnd\n    });\n    _this._previousLeft = 20;\n    _this._previousTop = 84;\n    _this._circleStyles = {\n      style: {\n        left: _this._previousLeft,\n        top: _this._previousTop,\n        backgroundColor: 'green'\n      }\n    };\n    return _this;\n  }\n\n  _createClass(DraggableCircle, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._updateNativeStyles();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsx(View, {\n        style: styles.container,\n        children: /*#__PURE__*/_jsx(View, _objectSpread({\n          ref: this._setCircleRef,\n          style: styles.circle\n        }, this._panResponder.panHandlers))\n      });\n    }\n  }, {\n    key: \"_highlight\",\n    value: function _highlight() {\n      this._circleStyles.style.backgroundColor = 'blue';\n\n      this._updateNativeStyles();\n    }\n  }, {\n    key: \"_unHighlight\",\n    value: function _unHighlight() {\n      this._circleStyles.style.backgroundColor = 'green';\n\n      this._updateNativeStyles();\n    }\n  }, {\n    key: \"_updateNativeStyles\",\n    value: function _updateNativeStyles() {\n      this.circle && this.circle.setNativeProps(this._circleStyles);\n    }\n  }]);\n\n  return DraggableCircle;\n}(PureComponent);\n\nexport { DraggableCircle as default };\nvar styles = StyleSheet.create({\n  circle: {\n    width: CIRCLE_SIZE,\n    height: CIRCLE_SIZE,\n    borderRadius: CIRCLE_SIZE / 2,\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    touchAction: 'none'\n  },\n  container: {\n    flex: 1,\n    minHeight: 400,\n    paddingTop: 64\n  }\n});","map":null,"metadata":{},"sourceType":"module"}