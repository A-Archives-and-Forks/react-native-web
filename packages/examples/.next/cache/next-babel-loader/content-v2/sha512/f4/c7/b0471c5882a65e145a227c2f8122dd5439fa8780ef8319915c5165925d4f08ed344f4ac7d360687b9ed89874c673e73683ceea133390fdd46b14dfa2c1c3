{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/necolas/OpenSource/github/necolas/react-native-web/packages/examples/pages/touchables/examples/FeedbackEvents.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/cjs/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/cjs/exports/Text\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/cjs/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/cjs/exports/View\";\nexport default function FeedbackEvents() {\n  _s();\n\n  var _this = this;\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      eventLog = _React$useState2[0],\n      updateEventLog = _React$useState2[1];\n\n  var handlePress = function handlePress(eventName) {\n    return function () {\n      var limit = 6;\n      updateEventLog(function (state) {\n        var nextState = state.slice(0, limit - 1);\n        nextState.unshift(eventName);\n        return nextState;\n      });\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(View, {\n    children: [/*#__PURE__*/_jsxDEV(View, {\n      children: /*#__PURE__*/_jsxDEV(TouchableWithoutFeedback, {\n        onLongPress: handlePress('longPress'),\n        onPress: handlePress('press'),\n        onPressIn: handlePress('pressIn'),\n        onPressOut: handlePress('pressOut'),\n        children: /*#__PURE__*/_jsxDEV(View, {\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            style: styles.touchableText,\n            children: \"Press Me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(View, {\n      style: styles.eventLogBox,\n      children: eventLog.map(function (e, ii) {\n        return /*#__PURE__*/_jsxDEV(Text, {\n          children: e\n        }, ii, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FeedbackEvents, \"r1XkUk51b9xPOZMbm9HC7DfJg2A=\");\n\n_c = FeedbackEvents;\nvar styles = StyleSheet.create({\n  touchableText: {\n    borderRadius: 8,\n    padding: 5,\n    borderWidth: 1,\n    borderColor: 'black',\n    color: '#007AFF',\n    borderStyle: 'solid',\n    textAlign: 'center'\n  },\n  eventLogBox: {\n    padding: 10,\n    marginTop: 10,\n    height: 120,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: '#f0f0f0',\n    backgroundColor: '#f9f9f9'\n  }\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"FeedbackEvents\");","map":{"version":3,"sources":["/Users/necolas/OpenSource/github/necolas/react-native-web/packages/examples/pages/touchables/examples/FeedbackEvents.js"],"names":["React","FeedbackEvents","useState","eventLog","updateEventLog","handlePress","eventName","limit","state","nextState","slice","unshift","styles","touchableText","eventLogBox","map","e","ii","StyleSheet","create","borderRadius","padding","borderWidth","borderColor","color","borderStyle","textAlign","marginTop","height","hairlineWidth","backgroundColor"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAGA,eAAe,SAASC,cAAT,GAA0B;AAAA;;AAAA;;AAAA,wBACJD,KAAK,CAACE,QAAN,CAAe,EAAf,CADI;AAAA;AAAA,MAChCC,QADgC;AAAA,MACtBC,cADsB;;AAGvC,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,SAAS,EAAI;AAC/B,WAAO,YAAM;AACX,UAAMC,KAAK,GAAG,CAAd;AACAH,MAAAA,cAAc,CAAC,UAAAI,KAAK,EAAI;AACtB,YAAMC,SAAS,GAAGD,KAAK,CAACE,KAAN,CAAY,CAAZ,EAAeH,KAAK,GAAG,CAAvB,CAAlB;AACAE,QAAAA,SAAS,CAACE,OAAV,CAAkBL,SAAlB;AACA,eAAOG,SAAP;AACD,OAJa,CAAd;AAKD,KAPD;AAQD,GATD;;AAWA,sBACE,QAAC,IAAD;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE,QAAC,wBAAD;AACE,QAAA,WAAW,EAAEJ,WAAW,CAAC,WAAD,CAD1B;AAEE,QAAA,OAAO,EAAEA,WAAW,CAAC,OAAD,CAFtB;AAGE,QAAA,SAAS,EAAEA,WAAW,CAAC,SAAD,CAHxB;AAIE,QAAA,UAAU,EAAEA,WAAW,CAAC,UAAD,CAJzB;AAAA,+BAME,QAAC,IAAD;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,KAAK,EAAEO,MAAM,CAACC,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAaE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACE,WAApB;AAAA,gBACGX,QAAQ,CAACY,GAAT,CAAa,UAACC,CAAD,EAAIC,EAAJ;AAAA,4BACZ,QAAC,IAAD;AAAA,oBAAgBD;AAAhB,WAAWC,EAAX;AAAA;AAAA;AAAA;AAAA,iBADY;AAAA,OAAb;AADH;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GAnCuBhB,c;;KAAAA,c;AAqCxB,IAAMW,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,aAAa,EAAE;AACbO,IAAAA,YAAY,EAAE,CADD;AAEbC,IAAAA,OAAO,EAAE,CAFI;AAGbC,IAAAA,WAAW,EAAE,CAHA;AAIbC,IAAAA,WAAW,EAAE,OAJA;AAKbC,IAAAA,KAAK,EAAE,SALM;AAMbC,IAAAA,WAAW,EAAE,OANA;AAObC,IAAAA,SAAS,EAAE;AAPE,GADgB;AAU/BZ,EAAAA,WAAW,EAAE;AACXO,IAAAA,OAAO,EAAE,EADE;AAEXM,IAAAA,SAAS,EAAE,EAFA;AAGXC,IAAAA,MAAM,EAAE,GAHG;AAIXN,IAAAA,WAAW,EAAEJ,UAAU,CAACW,aAJb;AAKXN,IAAAA,WAAW,EAAE,SALF;AAMXO,IAAAA,eAAe,EAAE;AANN;AAVkB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, TouchableWithoutFeedback, View } from 'react-native';\n\nexport default function FeedbackEvents() {\n  const [eventLog, updateEventLog] = React.useState([]);\n\n  const handlePress = eventName => {\n    return () => {\n      const limit = 6;\n      updateEventLog(state => {\n        const nextState = state.slice(0, limit - 1);\n        nextState.unshift(eventName);\n        return nextState;\n      });\n    };\n  };\n\n  return (\n    <View>\n      <View>\n        <TouchableWithoutFeedback\n          onLongPress={handlePress('longPress')}\n          onPress={handlePress('press')}\n          onPressIn={handlePress('pressIn')}\n          onPressOut={handlePress('pressOut')}\n        >\n          <View>\n            <Text style={styles.touchableText}>Press Me</Text>\n          </View>\n        </TouchableWithoutFeedback>\n      </View>\n      <View style={styles.eventLogBox}>\n        {eventLog.map((e, ii) => (\n          <Text key={ii}>{e}</Text>\n        ))}\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  touchableText: {\n    borderRadius: 8,\n    padding: 5,\n    borderWidth: 1,\n    borderColor: 'black',\n    color: '#007AFF',\n    borderStyle: 'solid',\n    textAlign: 'center'\n  },\n  eventLogBox: {\n    padding: 10,\n    marginTop: 10,\n    height: 120,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: '#f0f0f0',\n    backgroundColor: '#f9f9f9'\n  }\n});\n"]},"metadata":{},"sourceType":"module"}