{"ast":null,"code":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n'use strict';\n\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/cjs/exports/Animated\";\nimport Image from \"react-native-web/dist/cjs/exports/Image\";\nimport Platform from \"react-native-web/dist/cjs/exports/Platform\";\nimport TouchableHighlight from \"react-native-web/dist/cjs/exports/TouchableHighlight\";\nimport StyleSheet from \"react-native-web/dist/cjs/exports/StyleSheet\";\nimport Switch from \"react-native-web/dist/cjs/exports/Switch\";\nimport Text from \"react-native-web/dist/cjs/exports/Text\";\nimport TextInput from \"react-native-web/dist/cjs/exports/TextInput\";\nimport View from \"react-native-web/dist/cjs/exports/View\";\n\nfunction genItemData(count, start = 0) {\n  const dataBlob = [];\n\n  for (let ii = start; ii < count + start; ii++) {\n    const itemHash = Math.abs(hashCode('Item ' + ii));\n    dataBlob.push({\n      title: 'Item ' + ii,\n      text: LOREM_IPSUM.substr(0, itemHash % 301 + 20),\n      key: String(ii),\n      pressed: false\n    });\n  }\n\n  return dataBlob;\n}\n\nconst HORIZ_WIDTH = 200;\nconst ITEM_HEIGHT = 72;\n\nclass ItemComponent extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"_onPress\", () => {\n      this.props.onPress(this.props.item.key);\n    });\n  }\n\n  render() {\n    const {\n      fixedHeight,\n      horizontal,\n      item\n    } = this.props;\n    const itemHash = Math.abs(hashCode(item.title));\n    const imgSource = THUMB_URLS[itemHash % THUMB_URLS.length];\n    return /*#__PURE__*/_jsx(TouchableHighlight, {\n      onHideUnderlay: this.props.onHideUnderlay,\n      onPress: this._onPress,\n      onShowUnderlay: this.props.onShowUnderlay,\n      style: horizontal ? styles.horizItem : styles.item,\n      tvParallaxProperties: {\n        pressMagnification: 1.1\n      },\n      children: /*#__PURE__*/_jsxs(View, {\n        style: [styles.row, horizontal && {\n          width: HORIZ_WIDTH\n        }, fixedHeight && {\n          height: ITEM_HEIGHT\n        }],\n        children: [!item.noImage && /*#__PURE__*/_jsx(Image, {\n          source: imgSource,\n          style: styles.thumb\n        }), /*#__PURE__*/_jsxs(Text, {\n          numberOfLines: horizontal || fixedHeight ? 3 : undefined,\n          style: styles.text,\n          children: [item.title, \" - \", item.text]\n        })]\n      })\n    });\n  }\n\n}\n\nconst renderStackedItem = ({\n  item\n}) => {\n  const itemHash = Math.abs(hashCode(item.title));\n  const imgSource = THUMB_URLS[itemHash % THUMB_URLS.length];\n  return /*#__PURE__*/_jsxs(View, {\n    style: styles.stacked,\n    children: [/*#__PURE__*/_jsxs(Text, {\n      style: styles.stackedText,\n      children: [item.title, \" - \", item.text]\n    }), /*#__PURE__*/_jsx(Image, {\n      source: imgSource,\n      style: styles.thumb\n    })]\n  });\n};\n\nclass FooterComponent extends React.PureComponent {\n  render() {\n    return /*#__PURE__*/_jsxs(View, {\n      style: styles.headerFooterContainer,\n      children: [/*#__PURE__*/_jsx(SeparatorComponent, {}), /*#__PURE__*/_jsx(View, {\n        style: styles.headerFooter,\n        children: /*#__PURE__*/_jsx(Text, {\n          children: \"LIST FOOTER\"\n        })\n      })]\n    });\n  }\n\n}\n\nclass HeaderComponent extends React.PureComponent {\n  render() {\n    return /*#__PURE__*/_jsxs(View, {\n      style: styles.headerFooterContainer,\n      children: [/*#__PURE__*/_jsx(View, {\n        style: styles.headerFooter,\n        children: /*#__PURE__*/_jsx(Text, {\n          children: \"LIST HEADER\"\n        })\n      }), /*#__PURE__*/_jsx(SeparatorComponent, {})]\n    });\n  }\n\n}\n\nclass SeparatorComponent extends React.PureComponent {\n  render() {\n    return /*#__PURE__*/_jsx(View, {\n      style: styles.separator\n    });\n  }\n\n}\n\nclass ItemSeparatorComponent extends React.PureComponent {\n  render() {\n    const style = this.props.highlighted ? [styles.itemSeparator, {\n      marginLeft: 0,\n      backgroundColor: 'rgb(217, 217, 217)'\n    }] : styles.itemSeparator;\n    return /*#__PURE__*/_jsx(View, {\n      style: style\n    });\n  }\n\n}\n\nclass Spindicator extends React.PureComponent {\n  render() {\n    return /*#__PURE__*/_jsx(Animated.View, {\n      style: [styles.spindicator, {\n        transform: [{\n          rotate: this.props.value.interpolate({\n            inputRange: [0, 5000],\n            outputRange: ['0deg', '360deg'],\n            extrapolate: 'extend'\n          })\n        }]\n      }]\n    });\n  }\n\n}\n\nconst THUMB_URLS = ['./lists/like.png', './lists/dislike.png', './lists/call.png', './lists/fist.png', './lists/bandaged.png', './lists/flowers.png', './lists/heart.png', './lists/liking.png', './lists/party.png', './lists/poke.png', './lists/superlike.png', './lists/victory.png'];\nconst LOREM_IPSUM = 'Lorem ipsum dolor sit amet, ius ad pertinax oportere accommodare, an vix ' + 'civibus corrumpit referrentur. Te nam case ludus inciderint, te mea facilisi adipiscing. Sea id ' + 'integre luptatum. In tota sale consequuntur nec. Erat ocurreret mei ei. Eu paulo sapientem ' + 'vulputate est, vel an accusam intellegam interesset. Nam eu stet pericula reprimique, ea vim illud ' + 'modus, putant invidunt reprehendunt ne qui.';\n/* eslint no-bitwise: 0 */\n\nfunction hashCode(str) {\n  let hash = 15;\n\n  for (let ii = str.length - 1; ii >= 0; ii--) {\n    hash = (hash << 5) - hash + str.charCodeAt(ii);\n  }\n\n  return hash;\n}\n\nconst HEADER = {\n  height: 30,\n  width: 100\n};\nconst SEPARATOR_HEIGHT = StyleSheet.hairlineWidth;\n\nfunction getItemLayout(data, index, horizontal) {\n  const [length, separator, header] = horizontal ? [HORIZ_WIDTH, 0, HEADER.width] : [ITEM_HEIGHT, SEPARATOR_HEIGHT, HEADER.height];\n  return {\n    length,\n    offset: (length + separator) * index + header,\n    index\n  };\n}\n\nfunction pressItem(context, key) {\n  const index = Number(key);\n  const pressed = !context.state.data[index].pressed;\n  context.setState(state => {\n    const newData = [...state.data];\n    newData[index] = _objectSpread(_objectSpread({}, state.data[index]), {}, {\n      pressed,\n      title: 'Item ' + key + (pressed ? ' (pressed)' : '')\n    });\n    return {\n      data: newData\n    };\n  });\n}\n\nfunction renderSmallSwitchOption(context, key) {\n  if (Platform.isTVOS) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxs(View, {\n    style: styles.option,\n    children: [/*#__PURE__*/_jsxs(Text, {\n      children: [key, \":\"]\n    }), /*#__PURE__*/_jsx(Switch, {\n      onValueChange: value => context.setState({\n        [key]: value\n      }),\n      style: styles.smallSwitch,\n      value: context.state[key]\n    })]\n  });\n}\n\nfunction PlainInput(props) {\n  return /*#__PURE__*/_jsx(TextInput, _objectSpread({\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    clearButtonMode: \"always\",\n    style: styles.searchTextInput,\n    underlineColorAndroid: \"transparent\"\n  }, props));\n}\n\nconst styles = StyleSheet.create({\n  headerFooter: _objectSpread(_objectSpread({}, HEADER), {}, {\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }),\n  headerFooterContainer: {\n    backgroundColor: 'rgb(239, 239, 244)'\n  },\n  horizItem: {\n    alignSelf: 'flex-start' // Necessary for touch highlight\n\n  },\n  item: {\n    flex: 1\n  },\n  itemSeparator: {\n    height: SEPARATOR_HEIGHT,\n    backgroundColor: 'rgb(200, 199, 204)',\n    marginLeft: 60\n  },\n  option: {\n    flexDirection: 'row',\n    padding: 8,\n    paddingRight: 0\n  },\n  row: {\n    flexDirection: 'row',\n    padding: 10,\n    backgroundColor: 'white'\n  },\n  searchTextInput: {\n    backgroundColor: 'white',\n    borderColor: '#cccccc',\n    borderRadius: 3,\n    borderWidth: 1,\n    paddingLeft: 8,\n    paddingVertical: 0,\n    height: 26,\n    fontSize: 14,\n    flexGrow: 1\n  },\n  separator: {\n    height: SEPARATOR_HEIGHT,\n    backgroundColor: 'rgb(200, 199, 204)'\n  },\n  smallSwitch: Platform.select({\n    android: {\n      top: 1,\n      margin: -6,\n      transform: [{\n        scale: 0.7\n      }]\n    },\n    ios: {\n      top: 4,\n      margin: -10,\n      transform: [{\n        scale: 0.5\n      }]\n    }\n  }),\n  stacked: {\n    alignItems: 'center',\n    backgroundColor: 'white',\n    padding: 10\n  },\n  thumb: {\n    width: 50,\n    height: 50,\n    left: -5\n  },\n  spindicator: {\n    marginLeft: 'auto',\n    marginTop: 8,\n    width: 2,\n    height: 16,\n    backgroundColor: 'darkgray'\n  },\n  stackedText: {\n    padding: 4,\n    fontSize: 18\n  },\n  text: {\n    flex: 1\n  }\n});\nexport { FooterComponent, HeaderComponent, ItemComponent, ItemSeparatorComponent, PlainInput, SeparatorComponent, Spindicator, genItemData, getItemLayout, pressItem, renderSmallSwitchOption, renderStackedItem };","map":null,"metadata":{},"sourceType":"module"}