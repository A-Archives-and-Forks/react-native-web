{"ast":null,"code":"/*\nconst styles = StyleSheet.create({\n  box: {\n    backgroundColor: '#527FE4',\n    borderColor: '#000033',\n    borderWidth: 1\n  },\n  shadowBox: {\n    width: 100,\n    height: 100,\n    borderWidth: 2\n  },\n  shadow: {\n    shadowOpacity: 0.5,\n    shadowColor: 'red',\n    shadowRadius: 3,\n    shadowOffset: { width: 3, height: 3 }\n  },\n});\n\nclass ViewBorderStyleExample extends React.Component {\n  state = {\n    showBorder: true\n  };\n\n  render() {\n    return (\n      <TouchableWithoutFeedback onPress={this._handlePress}>\n        <View>\n          <View\n            style={{\n              borderWidth: 1,\n              borderStyle: this.state.showBorder ? 'dashed' : null,\n              padding: 5\n            }}\n          >\n            <Text style={{ fontSize: 11 }}>\n              Dashed border style\n            </Text>\n          </View>\n          <View\n            style={{\n              marginTop: 5,\n              borderWidth: 1,\n              borderRadius: 5,\n              borderStyle: this.state.showBorder ? 'dotted' : null,\n              padding: 5\n            }}\n          >\n            <Text style={{ fontSize: 11 }}>\n              Dotted border style\n            </Text>\n          </View>\n        </View>\n      </TouchableWithoutFeedback>\n    );\n  }\n\n  _handlePress() {\n    this.setState({ showBorder: !this.state.showBorder });\n  }\n}\n\n\nconst examples = [\n  {\n    title: 'Background Color',\n    render() {\n      return (\n        <View style={{ backgroundColor: '#527FE4', padding: 5 }}>\n          <Text style={{ fontSize: 11 }}>\n            Blue background\n          </Text>\n        </View>\n      );\n    }\n  },\n  {\n    title: 'Border',\n    render() {\n      return (\n        <View style={{ borderColor: '#527FE4', borderWidth: 5, padding: 10 }}>\n          <Text style={{ fontSize: 11 }}>5px blue border</Text>\n        </View>\n      );\n    }\n  },\n  {\n    title: 'Padding/Margin',\n    render() {\n      return (\n        <View style={{ borderColor: '#bb0000', borderWidth: 0.5 }}>\n          <View style={[styles.box, { padding: 5 }]}>\n            <Text style={{ fontSize: 11 }}>5px padding</Text>\n          </View>\n          <View style={[styles.box, { margin: 5 }]}>\n            <Text style={{ fontSize: 11 }}>5px margin</Text>\n          </View>\n          <View style={[styles.box, { margin: 5, padding: 5, alignSelf: 'flex-start' }]}>\n            <Text style={{ fontSize: 11 }}>\n              5px margin and padding,\n            </Text>\n            <Text style={{ fontSize: 11 }}>\n              widthAutonomous=true\n            </Text>\n          </View>\n        </View>\n      );\n    }\n  },\n  {\n    title: 'Border Radius',\n    render() {\n      return (\n        <View style={{ borderWidth: 0.5, borderRadius: 5, padding: 5 }}>\n          <Text style={{ fontSize: 11 }}>\n            Too much use of `borderRadius` (especially large radii) on\n            anything which is scrolling may result in dropped frames.\n            Use sparingly.\n          </Text>\n        </View>\n      );\n    }\n  },\n  {\n    title: 'Border Style',\n    render() {\n      return <ViewBorderStyleExample />;\n    }\n  },\n  {\n    title: 'Circle with Border Radius',\n    render() {\n      return <View style={{ borderRadius: 10, borderWidth: 1, width: 20, height: 20 }} />;\n    }\n  },\n  {\n    title: 'Overflow',\n    render() {\n      return (\n        <View style={{ flexDirection: 'row' }}>\n          <View\n            style={{\n              width: 95,\n              height: 10,\n              marginRight: 10,\n              marginBottom: 5,\n              overflow: 'hidden',\n              borderWidth: 0.5\n            }}\n          >\n            <View style={{ width: 200, height: 20 }}>\n              <Text>Overflow hidden</Text>\n            </View>\n          </View>\n          <View style={{ width: 95, height: 10, marginBottom: 5, borderWidth: 0.5 }}>\n            <View style={{ width: 200, height: 20 }}>\n              <Text>Overflow visible</Text>\n            </View>\n          </View>\n        </View>\n      );\n    }\n  },\n  {\n    title: 'Opacity',\n    render() {\n      return (\n        <View>\n          <View style={{ opacity: 0 }}><Text>Opacity 0</Text></View>\n          <View style={{ opacity: 0.1 }}><Text>Opacity 0.1</Text></View>\n          <View style={{ opacity: 0.3 }}><Text>Opacity 0.3</Text></View>\n          <View style={{ opacity: 0.5 }}><Text>Opacity 0.5</Text></View>\n          <View style={{ opacity: 0.7 }}><Text>Opacity 0.7</Text></View>\n          <View style={{ opacity: 0.9 }}><Text>Opacity 0.9</Text></View>\n          <View style={{ opacity: 1 }}><Text>Opacity 1</Text></View>\n        </View>\n      );\n    }\n  },\n  {\n    title: 'Basic shadow',\n    render() {\n      return <View style={[styles.shadowBox, styles.shadow]} />;\n    }\n  },\n  {\n    title: 'Shaped shadow',\n    description: 'borderRadius: 50',\n    render() {\n      return <View style={[styles.shadowBox, styles.shadow, { borderRadius: 50 }]} />;\n    }\n  }\n]\n*/","map":null,"metadata":{},"sourceType":"script"}